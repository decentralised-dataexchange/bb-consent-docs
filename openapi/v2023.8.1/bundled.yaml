openapi: 3.0.0
info:
  version: 2023.8.1
  title: GovStack Consent BB APIs
  description: |
    The Consent Building Block enables services for individuals to approve the use  of their personal data by defining the principles, functions, and architecture  of an information system. For organisations that process personal data, it  provides the ability to know the individual's will and legitimately process such  personal data. The Consent Building Block is a process-oriented GovStack Building Block  facilitating auditable bilateral agreements within a multi-agent environment that  integrates with most other Building Blocks.
  contact:
    email: support@igrant.io
    name: iGrant.io
    url: 'https://igrant.io'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
servers:
  - url: 'https://api.bb-consent.dev/'
    description: Development server
  - url: 'https://staging-consent-bb-api.igrant.io/'
    description: Staging server
  - url: 'https://demo-consent-bb-api.igrant.io/'
    description: Demo server
tags:
  - name: audit
    x-tag-expanded: false
    description: |
      These API(s) allow managing and viewing the consents and their audit trails. The audit trails  of consent management are vital to individuals and organisations in case of disputes or for  other reasons where it is necessary to ascertain a transaction's validity.
  - name: config
    x-tag-expanded: false
    description: |
      The Organisational API(s) allow administrators to configure consent-related aspects  from an organisational perspective. The notification APIs using webhooks are also part  of this category. E.g. These are used for notifications and callbacks to organisation's  IT systems. The administrators configure these, and the notifications may be towards the  organisation's IT system or towards individual users.
  - name: service
    x-tag-expanded: false
    description: |
      These API(s) sets allow individual users to view and manage their consent-related information about their organisation.
  - name: onboarding
    x-tag-expanded: false
    description: |
      These are used for onboarding the organisation, organisation admin and individual users to the system.  It also deals with all authentication and authorisation APIs that can be configured towards external IDPs.
paths:
  '/v1/organizations/{orgId}/logs':
    get:
      parameters:
        - name: orgId
          description: Organisation ID
          in: path
          required: true
          schema:
            type: string
      tags:
        - audit
      security:
        - BearerAuth: []
      description: Get action logs
      responses:
        '200':
          description: Action logs for the organisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationLog'
  '/v1/users/{userId}/consenthistory':
    get:
      tags:
        - service
      description: Get consent history for an individual
      parameters:
        - name: orgid
          in: query
          description: Organisation ID
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of consent histories to be fetched
          required: false
          schema:
            type: integer
            format: int32
            example: 1024
        - name: userId
          in: path
          description: Individual ID
          required: true
          schema:
            type: string
            example: 646236ee61e48900014efb9c
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserConsentHistory'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/users/{userId}/consents/{consentId}/purposes/{purposeId}':
    get:
      tags:
        - service
      description: Get consents by consent agreement ID
      parameters:
        - name: orgId
          in: path
          description: Organisation ID
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: Individual ID
          required: true
          schema:
            type: string
        - name: consentId
          in: path
          description: Consent record ID
          required: true
          schema:
            type: string
        - name: purposeId
          in: path
          description: Consent agreement ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConsentsByConsentAgreementId'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/users/{userId}/consents/{consentId}':
    get:
      tags:
        - service
      description: Get consents for all consent agreements
      parameters:
        - name: orgId
          in: path
          description: Organisation ID
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: Individual ID
          required: true
          schema:
            type: string
        - name: consentId
          in: path
          description: Consent record ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConsentsForAllConsentAgreements'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/users/{userId}/consents':
    get:
      tags:
        - service
      description: Get all consents
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConsents'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/users/{userId}/consents/{consentId}/purposes/{purposeId}/status':
    post:
      tags:
        - service
      description: Update consent for consent agreement
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: consentId
          in: path
          required: true
          schema:
            type: string
        - name: purposeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConsentForConsentAgreementRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConsentForConsentAgreementResponse'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/users/{userId}/consents/{consentId}/purposes/{purposeId}/attributes/{attributeId}':
    patch:
      tags:
        - service
      description: Update consent for data attribute
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: consentId
          in: path
          required: true
          schema:
            type: string
        - name: purposeId
          in: path
          required: true
          schema:
            type: string
        - name: attributeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConsentForDataAttributeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConsentForDataAttributeResponse'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/user/organizations/{orgId}/data-status':
    get:
      tags:
        - service
      description: List all data requests
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllDataRequests'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/user/organizations/{orgId}/data-delete':
    get:
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      tags:
        - service
      description: Get all delete my data requests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAllDeleteMyDataRequests'
      deprecated: false
      security:
        - BearerAuth: []
    post:
      tags:
        - service
      description: Delete my data
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/user/organizations/{orgId}/data-delete/status':
    get:
      tags:
        - service
      description: Get delete my data request status
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeleteMyDataRequestStatus'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/user/organizations/{orgId}/data-delete/{dataReqId}/cancel':
    post:
      tags:
        - service
      description: Cancel delete my data request
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: dataReqId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelDeleteMyDataRequest'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/user/organizations/{orgId}/data-download':
    post:
      tags:
        - service
      description: Send download my data request
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendDownloadMyDataRequestError'
      deprecated: false
      security:
        - BearerAuth: []
    get:
      tags:
        - service
      description: Get all download my data requests
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAllDownloadMyDataRequests'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/user/organizations/{orgId}/data-download/status':
    get:
      tags:
        - service
      description: Get download my data request status
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDownloadMyDataRequestStatus'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/user/organizations/{orgId}/data-download/{dataReqId}/cancel':
    post:
      tags:
        - service
      description: Cancel download my data request
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: dataReqId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelDownloadMyDataRequest'
      deprecated: false
      security:
        - BearerAuth: []
  /v1/GetUserOrgsAndConsents:
    get:
      tags:
        - service
      description: Get user org and consents
      parameters:
        - name: orgID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Organization
                  - ConsentID
                  - PurposeConsents
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
                  ConsentID:
                    type: string
                  PurposeConsents:
                    type: array
                    items:
                      required:
                        - Purpose
                        - Count
                      type: object
                      properties:
                        Purpose:
                          $ref: '#/components/schemas/ConsentAgreement'
                        Count:
                          required:
                            - Total
                            - Consented
                          type: object
                          properties:
                            Total:
                              type: integer
                              format: int32
                            Consented:
                              type: integer
                              format: int32
      deprecated: false
      security:
        - BearerAuth: []
  /v1/users/admin/login:
    post:
      tags:
        - onboarding
      description: Login as organisation admin
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
                - password
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - access_token
                  - expires_in
                  - refresh_expires_in
                  - refresh_token
                  - token_type
                type: object
                properties:
                  access_token:
                    type: string
                  expires_in:
                    type: integer
                    format: int32
                  refresh_expires_in:
                    type: integer
                    format: int32
                  refresh_token:
                    type: string
                  token_type:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                required:
                  - error
                  - error_description
                type: object
                properties:
                  error:
                    type: string
                  error_description:
                    type: string
                example:
                  error: invalid_grant
                  error_description: Invalid user credentials
      deprecated: false
  /v1/users/login:
    post:
      tags:
        - onboarding
      description: Login as individual
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
                - password
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - access_token
                  - expires_in
                  - refresh_expires_in
                  - refresh_token
                  - token_type
                type: object
                properties:
                  access_token:
                    type: string
                  expires_in:
                    type: integer
                    format: int32
                  refresh_expires_in:
                    type: integer
                    format: int32
                  refresh_token:
                    type: string
                  token_type:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                required:
                  - error
                  - error_description
                type: object
                properties:
                  error:
                    type: string
                  error_description:
                    type: string
                example:
                  error: invalid_grant
                  error_description: Invalid user credentials
      deprecated: false
  /v1.1/users/login:
    post:
      tags:
        - onboarding
      description: Login as individual
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
                - password
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - User
                  - Token
                type: object
                properties:
                  User:
                    required:
                      - ID
                      - Name
                      - IamID
                      - Email
                      - Phone
                      - ImageID
                      - ImageURL
                      - LastVisit
                      - Client
                      - Orgs
                      - APIKey
                      - Roles
                      - IncompleteProfile
                    type: object
                    properties:
                      ID:
                        type: string
                      Name:
                        type: string
                      IamID:
                        type: string
                      Email:
                        type: string
                      Phone:
                        type: string
                      ImageID:
                        type: string
                      ImageURL:
                        type: string
                      LastVisit:
                        type: string
                      Client:
                        required:
                          - Token
                          - Type
                        type: object
                        properties:
                          Token:
                            type: string
                          Type:
                            type: integer
                            format: int32
                      Orgs:
                        type: array
                        items:
                          required:
                            - OrgID
                            - Name
                            - Location
                            - Type
                            - TypeID
                            - EulaAccepted
                          type: object
                          properties:
                            OrgID:
                              type: string
                            Name:
                              type: string
                            Location:
                              type: string
                            Type:
                              type: string
                            TypeID:
                              type: string
                            EulaAccepted:
                              type: boolean
                      APIKey:
                        type: string
                      Roles:
                        type: array
                        items:
                          required:
                            - RoleID
                            - OrgID
                          type: object
                          properties:
                            RoleID:
                              type: integer
                              format: int32
                            OrgID:
                              type: string
                      IncompleteProfile:
                        type: boolean
                  Token:
                    required:
                      - access_token
                      - expires_in
                      - refresh_expires_in
                      - refresh_token
                      - token_type
                    type: object
                    properties:
                      access_token:
                        type: string
                      expires_in:
                        type: integer
                        format: int32
                      refresh_expires_in:
                        type: integer
                        format: int32
                      refresh_token:
                        type: string
                      token_type:
                        type: string
      deprecated: false
  /v1/users/validate/email:
    post:
      tags:
        - onboarding
      description: Validate email
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
              type: object
              properties:
                email:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Result
                  - Message
                type: object
                properties:
                  Result:
                    type: boolean
                  Message:
                    type: string
                example:
                  Result: true
                  Message: Email address is valid and not in use in our system
      deprecated: false
      security:
        - BearerAuth: []
  /v1/users/validate/phone:
    post:
      tags:
        - onboarding
      description: Validate phone
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - phone
              type: object
              properties:
                phone:
                  type: string
              example:
                phone: '+918848245047'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Result
                  - Message
                type: object
                properties:
                  Result:
                    type: boolean
                  Message:
                    type: string
                example:
                  Result: false
                  Message: Phone number is in use
      deprecated: false
      security:
        - BearerAuth: []
  /v1/users/verify/phone:
    post:
      tags:
        - onboarding
      description: For OTP verification of the given phone number
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - phone
              type: object
              properties:
                email:
                  type: string
                phone:
                  type: string
              example:
                email: george@yopmail.com
                phone: '+918848245047'
        required: true
      responses:
        '204':
          description: No Content
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
      servers:
        - url: 'http://example.com'
          variables: {}
  /v1/users/verify/otp:
    post:
      tags:
        - onboarding
      description: Verify OTP
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - phone
                - otp
              type: object
              properties:
                phone:
                  type: string
                otp:
                  type: string
              example:
                phone: '+918848245047'
                otp: '333363'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Result
                  - Message
                type: object
                properties:
                  Result:
                    type: boolean
                  Message:
                    type: string
                example:
                  Result: true
                  Message: Otp validatiation Succeeded
      deprecated: false
      security:
        - BearerAuth: []
  /v1/user/password/reset:
    put:
      tags:
        - onboarding
      description: Reset Password
      operationId: ResetPassword
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - password
              type: object
              properties:
                password:
                  type: string
              example:
                password: qwerty123
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - msg
                type: object
                properties:
                  msg:
                    type: string
                example:
                  msg: User password resetted successfully
      deprecated: false
      security:
        - BearerAuth: []
  /v1/user/password/forgot:
    put:
      tags:
        - onboarding
      description: Forgot Password
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
              type: object
              properties:
                username:
                  type: string
        required: true
      responses:
        '204':
          description: No Content
          content: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - Code
                  - Message
                type: object
                properties:
                  Code:
                    type: integer
                    format: int32
                  Message:
                    type: string
      deprecated: false
  /v1/users/logout:
    post:
      tags:
        - onboarding
      description: Logs out a user from the system
      requestBody:
        content:
          application/json:
            schema:
              required:
                - clientid
                - refreshtoken
              type: object
              properties:
                clientid:
                  type: string
                refreshtoken:
                  type: string
        required: true
      responses:
        '204':
          description: No Content
          content: {}
      deprecated: false
      security: []
  /v1/users/token:
    post:
      tags:
        - onboarding
      description: Refresh access token
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - refreshtoken
                - clientid
              type: object
              properties:
                refreshtoken:
                  type: string
                clientid:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - access_token
                  - expires_in
                  - refresh_expires_in
                  - refresh_token
                  - token_type
                type: object
                properties:
                  access_token:
                    type: string
                  expires_in:
                    type: integer
                    format: int32
                  refresh_expires_in:
                    type: integer
                    format: int32
                  refresh_token:
                    type: string
                  token_type:
                    type: string
      deprecated: false
      security: []
  /v1/users/register:
    post:
      tags:
        - onboarding
      description: Register individual
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
                - name
                - password
                - phone
              type: object
              properties:
                username:
                  type: string
                name:
                  type: string
                password:
                  type: string
                phone:
                  type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - msg
                type: object
                properties:
                  msg:
                    type: string
                example:
                  msg: User created successfully
      deprecated: false
  /v1/organizations/types:
    get:
      tags:
        - onboarding
      description: Get organization types
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - ID
                    - Type
                    - ImageID
                    - ImageURL
                  type: object
                  properties:
                    ID:
                      type: string
                    Type:
                      type: string
                    ImageID:
                      type: string
                    ImageURL:
                      type: string
      deprecated: false
      security:
        - BearerAuth: []
    post:
      tags:
        - onboarding
      description: Add organization type
      operationId: Addorganizationtype
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - type
              type: object
              properties:
                type:
                  type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - ID
                  - Type
                  - ImageID
                  - ImageURL
                type: object
                properties:
                  ID:
                    type: string
                  Type:
                    type: string
                  ImageID:
                    type: string
                  ImageURL:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/types/{typeId}':
    get:
      tags:
        - onboarding
      description: Get organization type by id
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - ID
                  - Type
                  - ImageID
                  - ImageURL
                type: object
                properties:
                  ID:
                    type: string
                  Type:
                    type: string
                  ImageID:
                    type: string
                  ImageURL:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
    delete:
      tags:
        - onboarding
      description: Delete organization type
      operationId: Deleteorganizationtype
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: string
            example: 64ec54ede2f6a8000142c66e
      responses:
        '204':
          description: No Content
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
    patch:
      tags:
        - onboarding
      description: Update organization type
      operationId: Updateorganizationtype
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - type
              type: object
              properties:
                type:
                  type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - ID
                  - Type
                  - ImageID
                  - ImageURL
                type: object
                properties:
                  ID:
                    type: string
                  Type:
                    type: string
                  ImageID:
                    type: string
                  ImageURL:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/types/{typeId}/image':
    post:
      tags:
        - onboarding
      description: Update organization type image
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              required:
                - orgtypeicon
              type: object
              properties:
                orgtypeicon:
                  type: string
                  format: binary
        required: false
      responses:
        '200':
          description: OK
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
    get:
      tags:
        - onboarding
      description: Get organization type image
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
      deprecated: false
      security:
        - BearerAuth: []
  /v1/organizations:
    post:
      tags:
        - onboarding
      description: Add Organization
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - location
                - typeid
                - HlcSupport
                - Description
              type: object
              properties:
                name:
                  type: string
                location:
                  type: string
                typeid:
                  type: string
                HlcSupport:
                  type: boolean
                Description:
                  type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}':
    get:
      tags:
        - onboarding
      description: Get organization by ID
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
    patch:
      tags:
        - onboarding
      description: Update organization
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - location
                - description
                - policyurl
              type: object
              properties:
                name:
                  type: string
                location:
                  type: string
                description:
                  type: string
                policyurl:
                  type: string
        required: true
      responses:
        '202':
          description: Accepted
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/coverimage':
    post:
      tags:
        - onboarding
      description: Update organization cover image
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              required:
                - orgimage
              type: object
              properties:
                orgimage:
                  type: string
                  format: binary
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/logoimage':
    post:
      tags:
        - onboarding
      description: Update organization logo image
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              required:
                - orgimage
              type: object
              properties:
                orgimage:
                  type: string
                  format: binary
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/image/{imageId}':
    get:
      tags:
        - onboarding
      description: Get organization image
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: imageId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/eulaURL':
    post:
      tags:
        - onboarding
      description: Update organization EULA url
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - eulaurl
              type: object
              properties:
                eulaurl:
                  type: string
        required: true
      responses:
        '202':
          description: Accepted
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
    delete:
      tags:
        - onboarding
      description: Delete organization EULA url
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/admins':
    post:
      tags:
        - onboarding
      description: Add org admin
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - userid
                - roleid
              type: object
              properties:
                userid:
                  type: string
                roleid:
                  type: integer
                  format: int32
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
    get:
      tags:
        - onboarding
      description: Get org admin
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - UserID
                    - Role
                  type: object
                  properties:
                    UserID:
                      type: string
                    Role:
                      type: string
      deprecated: false
      security:
        - BearerAuth: []
    delete:
      tags:
        - onboarding
      description: Delete org admin
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
  /v1/organizations/roles:
    get:
      tags:
        - onboarding
      description: Get organization roles
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - ID
                    - Role
                  type: object
                  properties:
                    ID:
                      type: integer
                      format: int32
                    Role:
                      type: string
      deprecated: false
  /v1/users/unregister:
    post:
      tags:
        - onboarding
      description: Unregister users
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - msg
                type: object
                properties:
                  msg:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                required:
                  - Code
                  - Message
                type: object
                properties:
                  Code:
                    type: integer
                    format: int32
                  Message:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
  /v1/user/register/android:
    post:
      tags:
        - onboarding
      description: User client register (android)
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - devicetoken
              type: object
              properties:
                devicetoken:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - User
                type: object
                properties:
                  User:
                    $ref: '#/components/schemas/Individual'
      deprecated: false
      security:
        - BearerAuth: []
  /v1/user/register/ios:
    post:
      tags:
        - onboarding
      description: User client register (ios)
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - devicetoken
              type: object
              properties:
                devicetoken:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - User
                type: object
                properties:
                  User:
                    $ref: '#/components/schemas/Individual'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/user/image/{imageId}':
    delete:
      tags:
        - onboarding
      description: Delete my image
      parameters:
        - name: imageId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
    get:
      tags:
        - onboarding
      description: Get my image
      parameters:
        - name: imageId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
      deprecated: false
      security:
        - BearerAuth: []
  /v1/user/image:
    post:
      tags:
        - onboarding
      description: Update my image
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              required:
                - userimage
              type: object
              properties:
                userimage:
                  type: string
                  format: binary
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - User
                type: object
                properties:
                  User:
                    $ref: '#/components/schemas/Individual'
      deprecated: false
      security:
        - BearerAuth: []
  /v1/user:
    patch:
      tags:
        - onboarding
      description: Update current user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - phone
              type: object
              properties:
                name:
                  type: string
                phone:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - User
                type: object
                properties:
                  User:
                    $ref: '#/components/schemas/Individual'
      deprecated: false
      security:
        - BearerAuth: []
    get:
      tags:
        - onboarding
      description: Get current user
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - User
                type: object
                properties:
                  User:
                    $ref: '#/components/schemas/Individual'
      deprecated: false
      security:
        - BearerAuth: []
  /v1/user/apikey:
    post:
      tags:
        - onboarding
      description: Create api key
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - User
                  - APIKey
                type: object
                properties:
                  User:
                    type: string
                  APIKey:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
    get:
      tags:
        - onboarding
      description: Get api key
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - User
                  - APIKey
                type: object
                properties:
                  User:
                    type: string
                  APIKey:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
  /v1/user/apikey/revoke:
    delete:
      tags:
        - onboarding
      description: Delete api key
      parameters: []
      responses:
        '200':
          description: OK
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/global-policy-configuration':
    get:
      tags:
        - config
      description: Get global policy configurations
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - PolicyURL
                  - DataRetention
                  - Jurisdiction
                  - Disclosure
                  - Type
                  - Restriction
                  - Shared3PP
                type: object
                properties:
                  PolicyURL:
                    type: string
                  DataRetention:
                    required:
                      - RetentionPeriod
                      - Enabled
                    type: object
                    properties:
                      RetentionPeriod:
                        type: integer
                        format: int32
                      Enabled:
                        type: boolean
                  Jurisdiction:
                    type: string
                  Disclosure:
                    type: string
                  Type:
                    required:
                      - ID
                      - Type
                      - ImageID
                      - ImageURL
                    type: object
                    properties:
                      ID:
                        type: string
                      Type:
                        type: string
                      ImageID:
                        type: string
                      ImageURL:
                        type: string
                  Restriction:
                    type: string
                  Shared3PP:
                    type: boolean
      deprecated: false
      security:
        - BearerAuth: []
    post:
      tags:
        - config
      description: Update global policy configurations
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - policyurl
                - retentionperiod
                - jurisdiction
                - disclosure
                - typeid
                - restriction
                - shared3pp
              type: object
              properties:
                policyurl:
                  type: string
                retentionperiod:
                  type: integer
                  format: int32
                jurisdiction:
                  type: string
                disclosure:
                  type: string
                typeid:
                  type: string
                restriction:
                  type: string
                shared3pp:
                  type: boolean
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - PolicyURL
                  - DataRetention
                  - Jurisdiction
                  - Disclosure
                  - Type
                  - Restriction
                  - Shared3PP
                type: object
                properties:
                  PolicyURL:
                    type: string
                  DataRetention:
                    required:
                      - RetentionPeriod
                      - Enabled
                    type: object
                    properties:
                      RetentionPeriod:
                        type: integer
                        format: int32
                      Enabled:
                        type: boolean
                  Jurisdiction:
                    type: string
                  Disclosure:
                    type: string
                  Type:
                    required:
                      - ID
                      - Type
                      - ImageID
                      - ImageURL
                    type: object
                    properties:
                      ID:
                        type: string
                      Type:
                        type: string
                      ImageID:
                        type: string
                      ImageURL:
                        type: string
                  Restriction:
                    type: string
                  Shared3PP:
                    type: boolean
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/purposes':
    post:
      tags:
        - config
      description: Add consent agreement
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - purposes
              type: object
              properties:
                purposes:
                  type: array
                  items:
                    $ref: '#/components/schemas/ConsentAgreement'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
    get:
      tags:
        - config
      description: Get consent agreements
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - OrgID
                  - Purposes
                type: object
                properties:
                  OrgID:
                    type: string
                  Purposes:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConsentAgreement'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/purposes/{purposeId}':
    delete:
      tags:
        - config
      description: Delete consent agreement by id
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: purposeId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - Code
                  - Message
                type: object
                properties:
                  Code:
                    type: integer
                    format: int32
                  Message:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
    put:
      tags:
        - config
      description: Update consent agreement by id
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: purposeId
          in: path
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentAgreement'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
    get:
      tags:
        - config
      description: Get consent agreement by id
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: purposeId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Purpose
                  - Templates
                type: object
                properties:
                  Purpose:
                    $ref: '#/components/schemas/ConsentAgreement'
                  Templates:
                    type: string
                    nullable: true
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/templates':
    post:
      tags:
        - config
      description: Add data attributes
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - templates
              type: object
              properties:
                templates:
                  type: array
                  items:
                    $ref: '#/components/schemas/DataAttribute'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
    get:
      tags:
        - config
      description: Get data attributes
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - OrgID
                  - Templates
                type: object
                properties:
                  OrgID:
                    type: string
                  Templates:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataAttribute'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/purposes/{purposeId}/templates':
    delete:
      tags:
        - config
      description: Delete multiple data attributes
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: purposeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/templates/{templateID}':
    get:
      tags:
        - config
      description: Get data attribute by ID
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: templateID
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - OrgID
                  - Template
                type: object
                properties:
                  OrgID:
                    type: string
                  Template:
                    $ref: '#/components/schemas/DataAttribute'
      deprecated: false
      security:
        - BearerAuth: []
    put:
      tags:
        - config
      description: Update data attribute by id
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: templateId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - Consent
                - PurposeIDs
              type: object
              properties:
                Consent:
                  type: string
                PurposeIDs:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
    delete:
      tags:
        - config
      description: Delete data attribute by id
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: templateId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/idp/open-id':
    post:
      tags:
        - config
      summary: Add identity provider
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
            example: '{{company-id}}'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/paths/~1v1~1organizations~1%7BorgId%7D~1idp~1open-id/put/requestBody/content/application~1json/schema'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v1~1organizations~1%7BorgId%7D~1idp~1open-id/put/responses/200/content/application~1json/schema'
      deprecated: false
      security:
        - BearerAuth: []
    put:
      tags:
        - config
      summary: Update identity provider
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
            example: '{{company-id}}'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - authorizationUrl
                - tokenUrl
                - logoutUrl
                - clientId
                - clientSecret
                - jwksUrl
                - validateSignature
                - disableuserinfo
                - issuer
                - defaultscope
              type: object
              properties:
                authorizationUrl:
                  type: string
                tokenUrl:
                  type: string
                logoutUrl:
                  type: string
                clientId:
                  type: string
                clientSecret:
                  type: string
                jwksUrl:
                  type: string
                validateSignature:
                  type: boolean
                disableuserinfo:
                  type: boolean
                issuer:
                  type: string
                defaultscope:
                  type: string
              example:
                authorizationUrl: 'https://iam.abc.io/auth'
                tokenUrl: 'https://iam.abc.io/token'
                logoutUrl: 'https://iam.abc.io/logout'
                clientId: idp-client
                clientSecret: 0654b48b-41c2-4887-ade5-fdb98d3fd13c
                jwksUrl: 'https://iam.abc.io/certs'
                validateSignature: true
                disableuserinfo: false
                issuer: 'https://iam.abc.io'
                defaultscope: openid
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - authorizationUrl
                  - tokenUrl
                  - logoutUrl
                  - clientAuthMethod
                  - syncMode
                  - clientId
                  - clientSecret
                  - jwksUrl
                  - userInfoUrl
                  - defaultScope
                  - validateSignature
                  - backchannelSupported
                  - disableUserInfo
                  - hideOnLoginPage
                  - issuer
                  - useJwksUrl
                type: object
                properties:
                  authorizationUrl:
                    type: string
                  tokenUrl:
                    type: string
                  logoutUrl:
                    type: string
                  clientAuthMethod:
                    type: string
                  syncMode:
                    type: string
                  clientId:
                    type: string
                  clientSecret:
                    type: string
                  jwksUrl:
                    type: string
                  userInfoUrl:
                    type: string
                  defaultScope:
                    type: string
                  validateSignature:
                    type: boolean
                  backchannelSupported:
                    type: boolean
                  disableUserInfo:
                    type: boolean
                  hideOnLoginPage:
                    type: boolean
                  issuer:
                    type: string
                  useJwksUrl:
                    type: boolean
                example:
                  authorizationUrl: 'https://iam.abc.io/auth'
                  tokenUrl: 'https://iam.abc.io/token'
                  logoutUrl: 'https://iam.abc.io/logout'
                  clientAuthMethod: client_secret_post
                  syncMode: IMPORT
                  clientId: idp-client
                  clientSecret: 0654b48b-41c2-4887-ade5-fdb98d3fd13c
                  jwksUrl: 'https://iam.abc.io/certs'
                  userInfoUrl: ''
                  defaultScope: openid
                  validateSignature: true
                  backchannelSupported: true
                  disableUserInfo: false
                  hideOnLoginPage: true
                  issuer: 'https://iam.abc.io'
                  useJwksUrl: true
      deprecated: false
      security:
        - BearerAuth: []
    delete:
      tags:
        - config
      summary: Delete identity provider
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
            example: '{{company-id}}'
      responses:
        '204':
          description: No Content
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
    get:
      tags:
        - config
      summary: Get identity provider
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v1~1organizations~1%7BorgId%7D~1idp~1open-id/put/responses/200/content/application~1json/schema'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/subscription/enable':
    post:
      tags:
        - config
      summary: Enable organization for subscription
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/subscription/disable':
    post:
      tags:
        - config
      summary: Disable organization for subscription
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/subscribe-method':
    get:
      tags:
        - config
      summary: Get subscribe method
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - ID
                  - Method
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                  Method:
                    type: string
                example:
                  ID: 1
                  Method: Key-Based
      deprecated: false
      security:
        - BearerAuth: []
    post:
      tags:
        - config
      summary: Set subscribe method
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - subscribemethodid
              type: object
              properties:
                subscribemethodid:
                  type: integer
                  format: int32
              example:
                subscribemethodid: 1
        required: true
      responses:
        '204':
          description: No Content
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
  /v1/organizations/subscribe-methods:
    get:
      tags:
        - config
      summary: Get subscribe methods
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Methods
                type: object
                properties:
                  Methods:
                    type: array
                    items:
                      required:
                        - ID
                        - Method
                      type: object
                      properties:
                        ID:
                          type: integer
                          format: int32
                        Method:
                          type: string
                example:
                  Methods:
                    - ID: 0
                      Method: Undefined
                    - ID: 1
                      Method: Key-Based
                    - ID: 2
                      Method: OpenID-Connect
      deprecated: false
  '/v1/organizations/{orgId}/subscribe-key':
    get:
      tags:
        - config
      summary: Get subscribe key
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - SubscribeKey
                  - SubscribeMethod
                type: object
                properties:
                  SubscribeKey:
                    type: string
                  SubscribeMethod:
                    type: string
                example:
                  SubscribeKey: CORC-SAHT-7ZKC
                  SubscribeMethod: Key-Based
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/subscribe-key/renew':
    post:
      tags:
        - config
      summary: Renew subscribe key
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - SubscribeKey
                  - SubscribeMethod
                type: object
                properties:
                  SubscribeKey:
                    type: string
                  SubscribeMethod:
                    type: string
                example:
                  SubscribeKey: LDXM-9BJB-0DAS
                  SubscribeMethod: Key-Based
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/users/count':
    get:
      tags:
        - config
      summary: Get organization users count
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - SubscribeUserCount
                type: object
                properties:
                  SubscribeUserCount:
                    type: integer
                    format: int32
                example:
                  SubscribeUserCount: 0
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/subscription':
    get:
      tags:
        - config
      summary: Get organization subscription status (enable/disable)
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
            example: '{{company-id}}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Enabled
                type: object
                properties:
                  Enabled:
                    type: boolean
                example:
                  Enabled: false
      deprecated: false
  '/v1/organizations/{orgId}/users':
    post:
      tags:
        - config
      summary: Add user to organization
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - userid
                - subscribekey
              type: object
              properties:
                userid:
                  type: string
                subscribekey:
                  type: string
              example:
                userid: 64ecd1bae2f6a8000142c675
                subscribekey: LDXM-9BJB-0DAS
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - User
                type: object
                properties:
                  User:
                    $ref: '#/components/schemas/Individual'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - Code
                  - Message
                type: object
                properties:
                  Code:
                    type: integer
                    format: int32
                  Message:
                    type: string
                example:
                  Code: 400
                  Message: 'Can not subscribe, Invalid subscription token, organization:64ec561de2f6a8000142c671'
      deprecated: false
      security:
        - BearerAuth: []
    get:
      tags:
        - config
      summary: Get organization users
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            format: int32
            example: 1024
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Users
                  - Links
                type: object
                properties:
                  Users:
                    type: array
                    items:
                      required:
                        - ID
                        - Name
                        - Phone
                        - Email
                      type: object
                      properties:
                        ID:
                          type: string
                        Name:
                          type: string
                        Phone:
                          type: string
                        Email:
                          type: string
                  Links:
                    $ref: '#/components/schemas/ListAllDataRequests/properties/Links'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/users/{userId}':
    delete:
      tags:
        - config
      summary: Delete user from organization
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - User
                type: object
                properties:
                  User:
                    $ref: '#/components/schemas/Individual'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/purposes/{purposeID}/attributes/{attributeID}/consented/users':
    get:
      tags:
        - config
      summary: Get all users consented to data attribute
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: purposeID
          in: path
          required: true
          schema:
            type: string
        - name: attributeID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Users
                  - Links
                type: object
                properties:
                  Users:
                    type: array
                    items:
                      required:
                        - ID
                        - Name
                        - Phone
                        - Email
                      type: object
                      properties:
                        ID:
                          type: string
                        Name:
                          type: string
                        Phone:
                          type: string
                        Email:
                          type: string
                  Links:
                    $ref: '#/components/schemas/ListAllDataRequests/properties/Links'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/purposes/{purposeId}/consented/users':
    get:
      tags:
        - config
      summary: Get all users consented to a data agreement
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: purposeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Users
                  - Links
                type: object
                properties:
                  Users:
                    type: array
                    items:
                      required:
                        - ID
                        - Name
                        - Phone
                        - Email
                      type: object
                      properties:
                        ID:
                          type: string
                        Name:
                          type: string
                        Phone:
                          type: string
                        Email:
                          type: string
                  Links:
                    $ref: '#/components/schemas/ListAllDataRequests/properties/Links'
      deprecated: false
      security:
        - BearerAuth: []
  /v1/organizations/data-requests:
    get:
      tags:
        - config
      summary: Get available data request statuses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - ID
                    - Str
                  type: object
                  properties:
                    ID:
                      type: integer
                      format: int32
                    Str:
                      type: string
                  example:
                    ID: 1
                    Str: Request initiated
      deprecated: false
  '/v1/organizations/{orgId}/data-requests':
    get:
      tags:
        - config
      summary: Get open and close data requests
      parameters:
        - name: status
          in: query
          required: true
          schema:
            type: string
            example: open
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - DataRequests
                  - IsRequestsOngoing
                  - IsDataDeleteRequestOngoing
                  - IsDataDownloadRequestOngoing
                  - Links
                type: object
                properties:
                  DataRequests:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataRequest'
                  IsRequestsOngoing:
                    type: boolean
                  IsDataDeleteRequestOngoing:
                    type: boolean
                  IsDataDownloadRequestOngoing:
                    type: boolean
                  Links:
                    $ref: '#/components/schemas/ListAllDataRequests/properties/Links'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/data-requests/{dataReqId}':
    get:
      tags:
        - config
      summary: Get data request
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: dataReqId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRequest'
      deprecated: false
      security:
        - BearerAuth: []
    patch:
      tags:
        - config
      summary: Update data request
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: dataReqId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - state
                - comment
              type: object
              properties:
                state:
                  type: integer
                  format: int32
                comment:
                  type: string
              example:
                state: 7
                comment: Request processed
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRequest'
      deprecated: false
      security:
        - BearerAuth: []
  /v1/organizations/webhooks/event-types:
    get:
      tags:
        - config
      description: Get webhook event types
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - EventTypes
                type: object
                properties:
                  EventTypes:
                    type: array
                    items:
                      type: string
                example:
                  EventTypes:
                    - data.update.initiated
                    - data.update.cancelled
                    - consent.allowed
                    - consent.disallowed
                    - consent.auto_expiry
                    - org.unsubscribed
                    - data.delete.initiated
                    - data.download.initiated
                    - data.delete.cancelled
                    - data.download.cancelled
                    - org.subscribed
      deprecated: false
      security:
        - BearerAuth: []
  /v1/organizations/webhooks/payload/content-types:
    get:
      tags:
        - config
      description: Get webhook payload content types
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - ContentTypes
                type: object
                properties:
                  ContentTypes:
                    type: array
                    items:
                      type: string
                example:
                  ContentTypes:
                    - application/json
                    - application/x-www-form-urlencoded
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/webhooks':
    post:
      tags:
        - config
      description: Create webhook
      parameters:
        - name: orgId
          in: path
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - payloadurl
                - subscribedevents
                - contenttype
                - secretkey
                - disabled
                - skipsslverification
              type: object
              properties:
                payloadurl:
                  type: string
                subscribedevents:
                  type: array
                  items:
                    type: string
                contenttype:
                  type: string
                secretkey:
                  type: string
                disabled:
                  type: boolean
                skipsslverification:
                  type: boolean
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - ID
                  - OrgID
                  - PayloadURL
                  - ContentType
                  - SubscribedEvents
                  - Disabled
                  - SecretKey
                  - SkipSSLVerification
                  - TimeStamp
                type: object
                properties:
                  ID:
                    type: string
                  OrgID:
                    type: string
                  PayloadURL:
                    type: string
                  ContentType:
                    type: string
                  SubscribedEvents:
                    type: array
                    items:
                      type: string
                  Disabled:
                    type: boolean
                  SecretKey:
                    type: string
                  SkipSSLVerification:
                    type: boolean
                  TimeStamp:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
    get:
      tags:
        - config
      description: Get all webhooks for an organisation
      parameters:
        - name: orgId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - ID
                    - PayloadURL
                    - Disabled
                    - TimeStamp
                    - IsLastDeliverySuccess
                  type: object
                  properties:
                    ID:
                      type: string
                    PayloadURL:
                      type: string
                    Disabled:
                      type: boolean
                    TimeStamp:
                      type: string
                    IsLastDeliverySuccess:
                      type: boolean
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/webhooks/{webhookId}':
    get:
      tags:
        - config
      description: Get a webhook by ID
      parameters:
        - name: orgId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: webhookId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - ID
                  - OrgID
                  - PayloadURL
                  - ContentType
                  - SubscribedEvents
                  - Disabled
                  - SecretKey
                  - SkipSSLVerification
                  - TimeStamp
                type: object
                properties:
                  ID:
                    type: string
                  OrgID:
                    type: string
                  PayloadURL:
                    type: string
                  ContentType:
                    type: string
                  SubscribedEvents:
                    type: array
                    items:
                      type: string
                  Disabled:
                    type: boolean
                  SecretKey:
                    type: string
                  SkipSSLVerification:
                    type: boolean
                  TimeStamp:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
    delete:
      tags:
        - config
      description: Delete webhook
      parameters:
        - name: orgId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: webhookId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
    put:
      tags:
        - config
      description: Update webhook
      parameters:
        - name: orgId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: webhookId
          in: path
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - payloadurl
                - subscribedevents
                - contenttype
                - secretkey
                - disabled
                - skipsslverification
              type: object
              properties:
                payloadurl:
                  type: string
                subscribedevents:
                  type: array
                  items:
                    type: string
                contenttype:
                  type: string
                secretkey:
                  type: string
                disabled:
                  type: boolean
                skipsslverification:
                  type: boolean
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - ID
                  - OrgID
                  - PayloadURL
                  - ContentType
                  - SubscribedEvents
                  - Disabled
                  - SecretKey
                  - SkipSSLVerification
                  - TimeStamp
                type: object
                properties:
                  ID:
                    type: string
                  OrgID:
                    type: string
                  PayloadURL:
                    type: string
                  ContentType:
                    type: string
                  SubscribedEvents:
                    type: array
                    items:
                      type: string
                  Disabled:
                    type: boolean
                  SecretKey:
                    type: string
                  SkipSSLVerification:
                    type: boolean
                  TimeStamp:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/webhooks/{webhookId}/ping':
    post:
      tags:
        - config
      description: Ping webhook
      parameters:
        - name: orgId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: webhookId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - ResponseStatusCode
                  - ResponseStatusStr
                  - ExecutionStartTimeStamp
                  - ExecutionEndTimeStamp
                  - Status
                  - StatusDescription
                type: object
                properties:
                  ResponseStatusCode:
                    type: integer
                    format: int32
                  ResponseStatusStr:
                    type: string
                  ExecutionStartTimeStamp:
                    type: string
                  ExecutionEndTimeStamp:
                    type: string
                  Status:
                    type: string
                  StatusDescription:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/webhooks/{webhookId}/delivery':
    get:
      tags:
        - config
      description: Get recent webhook deliveries
      parameters:
        - name: orgId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: webhookId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - WebhookDeliveries
                  - Links
                type: object
                properties:
                  WebhookDeliveries:
                    type: array
                    items:
                      required:
                        - ID
                        - WebhookID
                        - ResponseStatusCode
                        - ResponseStatusStr
                        - TimeStamp
                        - Status
                        - StatusDescription
                      type: object
                      properties:
                        ID:
                          type: string
                        WebhookID:
                          type: string
                        ResponseStatusCode:
                          type: integer
                          format: int32
                        ResponseStatusStr:
                          type: string
                        TimeStamp:
                          type: string
                        Status:
                          type: string
                        StatusDescription:
                          type: string
                  Links:
                    $ref: '#/components/schemas/ListAllDataRequests/properties/Links'
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/webhooks/{webhookId}/delivery/{deliveryId}':
    get:
      tags:
        - config
      description: Get recent webhook delivery by ID
      parameters:
        - name: orgId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: webhookId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: deliveryId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - ID
                  - RequestHeaders
                  - RequestPayload
                  - ResponseHeaders
                  - ResponseBody
                  - ResponseStatusCode
                  - ResponseStatusStr
                  - ExecutionStartTimeStamp
                  - ExecutionEndTimeStamp
                  - Status
                  - StatusDescription
                type: object
                properties:
                  ID:
                    type: string
                  RequestHeaders:
                    required:
                      - Accept
                      - Content-Type
                      - User-Agent
                      - X-Igrant-Signature
                    type: object
                    properties:
                      Accept:
                        type: array
                        items:
                          type: string
                      Content-Type:
                        type: array
                        items:
                          type: string
                      User-Agent:
                        type: array
                        items:
                          type: string
                      X-Igrant-Signature:
                        type: array
                        items:
                          type: string
                  RequestPayload:
                    required:
                      - data
                      - deliveryid
                      - timestamp
                      - type
                      - webhookid
                    type: object
                    properties:
                      data:
                        required:
                          - attribute
                          - consentID
                          - days
                          - organisationID
                          - purposeID
                          - timestamp
                          - userID
                        type: object
                        properties:
                          attribute:
                            type: array
                            items:
                              type: string
                          consentID:
                            type: string
                          days:
                            type: integer
                            format: int32
                          organisationID:
                            type: string
                          purposeID:
                            type: string
                          timestamp:
                            type: string
                          userID:
                            type: string
                      deliveryid:
                        type: string
                      timestamp:
                        type: string
                      type:
                        type: string
                      webhookid:
                        type: string
                  ResponseHeaders:
                    required:
                      - Cache-Control
                      - Content-Type
                      - Date
                      - Server
                      - Vary
                      - X-Request-Id
                      - X-Token-Id
                    type: object
                    properties:
                      Cache-Control:
                        type: array
                        items:
                          type: string
                      Content-Type:
                        type: array
                        items:
                          type: string
                      Date:
                        type: array
                        items:
                          type: string
                      Server:
                        type: array
                        items:
                          type: string
                      Vary:
                        type: array
                        items:
                          type: string
                      X-Request-Id:
                        type: array
                        items:
                          type: string
                      X-Token-Id:
                        type: array
                        items:
                          type: string
                  ResponseBody:
                    type: string
                  ResponseStatusCode:
                    type: integer
                    format: int32
                  ResponseStatusStr:
                    type: string
                  ExecutionStartTimeStamp:
                    type: string
                  ExecutionEndTimeStamp:
                    type: string
                  Status:
                    type: string
                  StatusDescription:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
  '/v1/organizations/{orgId}/webhooks/{webhookId}/delivery/{deliveryId}/redeliver':
    post:
      tags:
        - config
      description: Redeliver a webhook payload by delivery ID
      parameters:
        - name: orgId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: webhookId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: deliveryId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
components:
  schemas:
    OrganisationLog:
      type: object
      required:
        - message
      properties:
        Logs:
          description: A human readable error message
          type: array
          items:
            type: object
            properties:
              ID:
                type: string
                description: ID for organisation log
              Type:
                type: integer
                description: Type integer for organisation log
              TypeStr:
                type: string
                description: Type string for organisation log
              UserID:
                type: string
                description: User ID
              UserName:
                type: string
              TimeStamp:
                type: string
              Log:
                type: string
        Links:
          description: Pagination links
          $ref: '#/components/schemas/ListAllDataRequests/properties/Links'
    GetUserConsentHistory:
      required:
        - ConsentHistory
        - Links
      type: object
      properties:
        ConsentHistory:
          type: array
          items:
            $ref: '#/components/schemas/ConsentHistory'
          description: List of consent history
        Links:
          $ref: '#/components/schemas/ListAllDataRequests/properties/Links'
          description: Pagination links
    ConsentHistory:
      required:
        - ID
        - OrgID
        - PurposeID
        - Log
        - TimeStamp
      type: object
      properties:
        ID:
          type: string
          description: Consent history ID
        OrgID:
          type: string
          description: Organisation ID
        PurposeID:
          type: string
          description: Consent agreement ID
        Log:
          type: string
          description: Log string
        TimeStamp:
          type: string
          description: Timestamp in ISO 8601 date time format
      example:
        ID: 64e91591e2f6a8000142c665
        OrgID: 603e683c69dd720001c74f93
        PurposeID: 61e183127c81650001f97d43
        Log: Updated consent value to <Allow> for the purpose <Customer Loyalty Card Issuance> in organization <The Retail Company (Germany)>
        TimeStamp: '2023-08-25T20:56:49Z'
    GetConsentsByConsentAgreementId:
      required:
        - ID
        - ConsentID
        - OrgID
        - UserID
        - Consents
        - DataRetention
      type: object
      properties:
        ID:
          type: string
        ConsentID:
          type: string
        OrgID:
          type: string
        UserID:
          type: string
        DataRetention:
          required:
            - Expiry
          type: object
          properties:
            Expiry:
              type: string
        Consents:
          required:
            - Purpose
            - Count
            - Consents
          type: object
          properties:
            Purpose:
              required:
                - ID
                - Name
                - Description
                - LawfulUsage
                - LawfulBasisOfProcessing
                - PolicyURL
                - AttributeType
                - Jurisdiction
                - Disclosure
                - IndustryScope
                - DataRetention
                - Restriction
                - Shared3PP
                - Version
                - PublishFlag
              type: object
              properties:
                ID:
                  type: string
                Name:
                  type: string
                Description:
                  type: string
                LawfulUsage:
                  type: boolean
                LawfulBasisOfProcessing:
                  type: integer
                  format: int32
                PolicyURL:
                  type: string
                AttributeType:
                  type: integer
                  format: int32
                Jurisdiction:
                  type: string
                Disclosure:
                  type: string
                IndustryScope:
                  type: string
                DataRetention:
                  required:
                    - RetentionPeriod
                    - Enabled
                  type: object
                  properties:
                    RetentionPeriod:
                      type: integer
                      format: int32
                    Enabled:
                      type: boolean
                Restriction:
                  type: string
                Shared3PP:
                  type: boolean
                Version:
                  type: string
                PublishFlag:
                  type: boolean
            Count:
              required:
                - Total
                - Consented
              type: object
              properties:
                Total:
                  type: integer
                  format: int32
                Consented:
                  type: integer
                  format: int32
            Consents:
              type: array
              items:
                required:
                  - ID
                  - Description
                  - Value
                  - Status
                type: object
                properties:
                  ID:
                    type: string
                  Description:
                    type: string
                  Value:
                    type: string
                  Status:
                    required:
                      - Consented
                      - TimeStamp
                      - Days
                      - Remaining
                    type: object
                    properties:
                      Consented:
                        type: string
                      TimeStamp:
                        type: string
                      Days:
                        type: integer
                        format: int32
                      Remaining:
                        type: integer
                        format: int32
    GetConsentsForAllConsentAgreements:
      required:
        - ID
        - OrgID
        - UserID
        - ConsentsAndPurposes
      type: object
      properties:
        ID:
          type: string
        OrgID:
          type: string
        UserID:
          type: string
        ConsentsAndPurposes:
          type: array
          items:
            required:
              - Purpose
              - Count
              - Consents
            type: object
            properties:
              Purpose:
                $ref: '#/components/schemas/GetConsentsByConsentAgreementId/properties/Consents/properties/Purpose'
              Count:
                $ref: '#/components/schemas/GetConsentsByConsentAgreementId/properties/Consents/properties/Count'
              Consents:
                type: array
                items:
                  $ref: '#/components/schemas/GetConsentsByConsentAgreementId/properties/Consents/properties/Consents/items'
    GetConsents:
      required:
        - ID
        - OrgID
        - UserID
        - ConsentsAndPurposes
      type: object
      properties:
        ID:
          type: string
        OrgID:
          type: string
        UserID:
          type: string
        ConsentsAndPurposes:
          type: array
          items:
            required:
              - Purpose
              - Count
              - Consents
              - DataRetention
            type: object
            properties:
              Purpose:
                $ref: '#/components/schemas/GetConsentsByConsentAgreementId/properties/Consents/properties/Purpose'
              Count:
                $ref: '#/components/schemas/GetConsentsByConsentAgreementId/properties/Consents/properties/Count'
              Consents:
                type: array
                items:
                  $ref: '#/components/schemas/GetConsentsByConsentAgreementId/properties/Consents/properties/Consents/items'
              DataRetention:
                required:
                  - Expiry
                type: object
                properties:
                  Expiry:
                    type: string
    UpdateConsentForConsentAgreementRequest:
      required:
        - consented
      type: object
      properties:
        consented:
          type: string
      example:
        consented: Allow
    UpdateConsentForConsentAgreementResponse:
      required:
        - ID
        - OrgID
        - UserID
        - ConsentsAndPurposes
      type: object
      properties:
        ID:
          type: string
        OrgID:
          type: string
        UserID:
          type: string
        ConsentsAndPurposes:
          type: array
          items:
            required:
              - Purpose
              - Count
              - Consents
              - DataRetention
            type: object
            properties:
              Purpose:
                $ref: '#/components/schemas/GetConsentsByConsentAgreementId/properties/Consents/properties/Purpose'
              Count:
                $ref: '#/components/schemas/GetConsentsByConsentAgreementId/properties/Consents/properties/Count'
              Consents:
                type: array
                items:
                  $ref: '#/components/schemas/GetConsentsByConsentAgreementId/properties/Consents/properties/Consents/items'
              DataRetention:
                required:
                  - Expiry
                type: object
                properties:
                  Expiry:
                    type: string
    UpdateConsentForDataAttributeRequest:
      required:
        - consented
        - days
      type: object
      properties:
        consented:
          type: string
        days:
          type: integer
          format: int32
      example:
        consented: Allow
        days: 0
    UpdateConsentForDataAttributeResponse:
      required:
        - Msg
        - Status
      type: object
      properties:
        Msg:
          type: string
        Status:
          type: integer
          format: int32
      example:
        Msg: Consent updated successfully
        Status: 200
    ListAllDataRequests:
      required:
        - DataRequests
        - IsRequestsOngoing
        - IsDataDeleteRequestOngoing
        - IsDataDownloadRequestOngoing
        - Links
      type: object
      properties:
        DataRequests:
          type: array
          items:
            required:
              - ID
              - UserID
              - UserName
              - OrgID
              - Type
              - TypeStr
              - State
              - RequestedDate
              - ClosedDate
              - StateStr
              - Comment
            type: object
            properties:
              ID:
                type: string
              UserID:
                type: string
              UserName:
                type: string
              OrgID:
                type: string
              Type:
                type: integer
                format: int32
              TypeStr:
                type: string
              State:
                type: integer
                format: int32
              RequestedDate:
                type: string
              ClosedDate:
                type: string
              StateStr:
                type: string
              Comment:
                type: string
            example:
              ID: 64eb3999e2f6a8000142c666
              UserID: 638de3302f5d1700014431f3
              UserName: johndoe@yopmail.com
              OrgID: 603e683c69dd720001c74f93
              Type: 1
              TypeStr: Delete Data
              State: 7
              RequestedDate: '2023-08-27 11:55:05 +0000 UTC'
              ClosedDate: '2023-08-27 11:56:45.307 +0000 UTC'
              StateStr: Request processed with action
              Comment: ''
        IsRequestsOngoing:
          type: boolean
        IsDataDeleteRequestOngoing:
          type: boolean
        IsDataDownloadRequestOngoing:
          type: boolean
        Links:
          description: Pagination links
          type: object
          properties:
            self:
              description: Link to the current page
              type: string
              example: 'https://staging-api.igrant.io/v1/users/638de3302f5d1700014431f3/consenthistory?limit=1024'
            next:
              description: Link to the next page
              type: string
    GetAllDeleteMyDataRequests:
      required:
        - ID
        - UserID
        - UserName
        - OrgID
        - Type
        - TypeStr
        - State
        - RequestedDate
        - ClosedDate
        - StateStr
        - Comment
      type: object
      properties:
        ID:
          type: string
        UserID:
          type: string
        UserName:
          type: string
        OrgID:
          type: string
        Type:
          type: integer
          format: int32
        TypeStr:
          type: string
        State:
          type: integer
          format: int32
        RequestedDate:
          type: string
        ClosedDate:
          type: string
        StateStr:
          type: string
        Comment:
          type: string
      example:
        ID: 64eb3999e2f6a8000142c666
        UserID: 638de3302f5d1700014431f3
        UserName: johndoe@yopmail.com
        OrgID: 603e683c69dd720001c74f93
        Type: 1
        TypeStr: Delete Data
        State: 7
        RequestedDate: '2023-08-27 11:55:05 +0000 UTC'
        ClosedDate: '2023-08-27 11:56:45.307 +0000 UTC'
        StateStr: Request processed with action
        Comment: ''
    GetDeleteMyDataRequestStatus:
      required:
        - RequestOngoing
        - ID
        - State
        - StateStr
        - RequestedDate
      type: object
      properties:
        RequestOngoing:
          type: boolean
        ID:
          type: string
        State:
          type: integer
          format: int32
        StateStr:
          type: string
        RequestedDate:
          type: string
      example:
        RequestOngoing: true
        ID: 64eba692e2f6a8000142c668
        State: 1
        StateStr: Request initiated
        RequestedDate: '2023-08-27 19:40:02 +0000 UTC'
    CancelDeleteMyDataRequest:
      required:
        - ID
        - UserID
        - UserName
        - OrgID
        - Type
        - TypeStr
        - State
        - RequestedDate
        - ClosedDate
        - StateStr
        - Comment
      type: object
      properties:
        ID:
          type: string
        UserID:
          type: string
        UserName:
          type: string
        OrgID:
          type: string
        Type:
          type: integer
          format: int32
        TypeStr:
          type: string
        State:
          type: integer
          format: int32
        RequestedDate:
          type: string
        ClosedDate:
          type: string
        StateStr:
          type: string
        Comment:
          type: string
      example:
        ID: 64eba692e2f6a8000142c668
        UserID: 638de3302f5d1700014431f3
        UserName: johndoe@yopmail.com
        OrgID: 603e683c69dd720001c74f93
        Type: 1
        TypeStr: Delete Data
        State: 8
        RequestedDate: '2023-08-27 19:40:02 +0000 UTC'
        ClosedDate: '0001-01-01 00:00:00 +0000 UTC'
        StateStr: Request cancelled by user
        Comment: ''
    SendDownloadMyDataRequestError:
      required:
        - Code
        - Message
      type: object
      properties:
        Code:
          type: integer
          format: int32
        Message:
          type: string
      example:
        Code: 400
        Message: 'Request (Download Data) ongoing for user: 638de3302f5d1700014431f3 organization: 603e683c69dd720001c74f93'
    GetAllDownloadMyDataRequests:
      required:
        - ID
        - UserID
        - UserName
        - OrgID
        - Type
        - TypeStr
        - State
        - RequestedDate
        - ClosedDate
        - StateStr
        - Comment
      type: object
      properties:
        ID:
          type: string
        UserID:
          type: string
        UserName:
          type: string
        OrgID:
          type: string
        Type:
          type: integer
          format: int32
        TypeStr:
          type: string
        State:
          type: integer
          format: int32
        RequestedDate:
          type: string
        ClosedDate:
          type: string
        StateStr:
          type: string
        Comment:
          type: string
      example:
        ID: 64ebb1a7e2f6a8000142c669
        UserID: 638de3302f5d1700014431f3
        UserName: johndoe@yopmail.com
        OrgID: 603e683c69dd720001c74f93
        Type: 2
        TypeStr: Download Data
        State: 1
        RequestedDate: '2023-08-27 20:27:19 +0000 UTC'
        ClosedDate: '0001-01-01 00:00:00 +0000 UTC'
        StateStr: Request initiated
        Comment: ''
    GetDownloadMyDataRequestStatus:
      required:
        - RequestOngoing
        - ID
        - State
        - StateStr
        - RequestedDate
      type: object
      properties:
        RequestOngoing:
          type: boolean
        ID:
          type: string
        State:
          type: integer
          format: int32
        StateStr:
          type: string
        RequestedDate:
          type: string
      example:
        RequestOngoing: true
        ID: 64ebb1a7e2f6a8000142c669
        State: 1
        StateStr: Request initiated
        RequestedDate: '2023-08-27 20:27:19 +0000 UTC'
    CancelDownloadMyDataRequest:
      required:
        - ID
        - UserID
        - UserName
        - OrgID
        - Type
        - TypeStr
        - State
        - RequestedDate
        - ClosedDate
        - StateStr
        - Comment
      type: object
      properties:
        ID:
          type: string
        UserID:
          type: string
        UserName:
          type: string
        OrgID:
          type: string
        Type:
          type: integer
          format: int32
        TypeStr:
          type: string
        State:
          type: integer
          format: int32
        RequestedDate:
          type: string
        ClosedDate:
          type: string
        StateStr:
          type: string
        Comment:
          type: string
      example:
        ID: 64ebb1a7e2f6a8000142c669
        UserID: 638de3302f5d1700014431f3
        UserName: johndoe@yopmail.com
        OrgID: 603e683c69dd720001c74f93
        Type: 2
        TypeStr: Download Data
        State: 8
        RequestedDate: '2023-08-27 20:27:19 +0000 UTC'
        ClosedDate: '0001-01-01 00:00:00 +0000 UTC'
        StateStr: Request cancelled by user
        Comment: ''
    Individual:
      required:
        - ID
        - Name
        - IamID
        - Email
        - Phone
        - ImageID
        - ImageURL
        - LastVisit
        - Client
        - Orgs
        - APIKey
        - Roles
        - IncompleteProfile
      type: object
      properties:
        ID:
          type: string
        Name:
          type: string
        IamID:
          type: string
        Email:
          type: string
        Phone:
          type: string
        ImageID:
          type: string
        ImageURL:
          type: string
        LastVisit:
          type: string
        Client:
          required:
            - Token
            - Type
          type: object
          properties:
            Token:
              type: string
            Type:
              type: integer
              format: int32
        Orgs:
          type: array
          items:
            type: string
        APIKey:
          type: string
        Roles:
          type: array
          items:
            type: string
        IncompleteProfile:
          type: boolean
    Organisation:
      required:
        - ID
        - Name
        - CoverImageID
        - CoverImageURL
        - LogoImageID
        - LogoImageURL
        - Location
        - Type
        - Jurisdiction
        - Disclosure
        - Restriction
        - Shared3PP
        - Description
        - Enabled
        - PolicyURL
        - EulaURL
        - Templates
        - Purposes
        - Admins
        - BillingInfo
        - Subs
        - HlcSupport
        - PrivacyDashboard
        - AriesCloudAgentDeployment
        - DataRetention
        - IdentityProviderRepresentation
        - KeycloakOpenIDClient
        - ExternalIdentityProviderAvailable
      type: object
      properties:
        ID:
          type: string
        Name:
          type: string
        CoverImageID:
          type: string
        CoverImageURL:
          type: string
        LogoImageID:
          type: string
        LogoImageURL:
          type: string
        Location:
          type: string
        Type:
          required:
            - ID
            - Type
            - ImageID
            - ImageURL
          type: object
          properties:
            ID:
              type: string
            Type:
              type: string
            ImageID:
              type: string
            ImageURL:
              type: string
        Jurisdiction:
          type: string
        Disclosure:
          type: string
        Restriction:
          type: string
        Shared3PP:
          type: boolean
        Description:
          type: string
        Enabled:
          type: boolean
        PolicyURL:
          type: string
        EulaURL:
          type: string
        Templates:
          type: array
          items:
            $ref: '#/components/schemas/DataAttribute'
        Purposes:
          type: array
          items:
            $ref: '#/components/schemas/ConsentAgreement'
        Admins:
          type: array
          items:
            required:
              - UserID
              - RoleID
            type: object
            properties:
              UserID:
                type: string
              RoleID:
                type: integer
                format: int32
        Subs:
          required:
            - Method
            - Key
          type: object
          properties:
            Method:
              type: integer
              format: int32
            Key:
              type: string
        HlcSupport:
          type: boolean
        PrivacyDashboard:
          required:
            - HostName
            - Version
          type: object
          properties:
            HostName:
              type: string
            Version:
              type: string
        DataRetention:
          required:
            - RetentionPeriod
            - Enabled
          type: object
          properties:
            RetentionPeriod:
              type: integer
              format: int32
            Enabled:
              type: boolean
          example:
            RetentionPeriod: 0
            Enabled: false
        IdentityProviderRepresentation:
          required:
            - providerId
            - config
            - alias
            - storeToken
            - addReadTokenRoleOnCreate
            - enabled
            - firstBrokerLoginFlowAlias
            - linkOnly
            - postBrokerLoginFlowAlias
            - trustEmail
            - authenticateByDefault
          type: object
          properties:
            providerId:
              type: string
            config:
              required:
                - authorizationUrl
                - tokenUrl
                - logoutUrl
                - clientAuthMethod
                - syncMode
                - clientId
                - clientSecret
                - jwksUrl
                - userInfoUrl
                - defaultScope
                - validateSignature
                - backchannelSupported
                - disableUserInfo
                - hideOnLoginPage
                - issuer
                - useJwksUrl
              type: object
              properties:
                authorizationUrl:
                  type: string
                tokenUrl:
                  type: string
                logoutUrl:
                  type: string
                clientAuthMethod:
                  type: string
                syncMode:
                  type: string
                clientId:
                  type: string
                clientSecret:
                  type: string
                jwksUrl:
                  type: string
                userInfoUrl:
                  type: string
                defaultScope:
                  type: string
                validateSignature:
                  type: boolean
                backchannelSupported:
                  type: boolean
                disableUserInfo:
                  type: boolean
                hideOnLoginPage:
                  type: boolean
                issuer:
                  type: string
                useJwksUrl:
                  type: boolean
              example:
                authorizationUrl: ''
                tokenUrl: ''
                logoutUrl: ''
                clientAuthMethod: ''
                syncMode: ''
                clientId: ''
                clientSecret: ''
                jwksUrl: ''
                userInfoUrl: ''
                defaultScope: ''
                validateSignature: false
                backchannelSupported: false
                disableUserInfo: false
                hideOnLoginPage: false
                issuer: ''
                useJwksUrl: false
            alias:
              type: string
            storeToken:
              type: boolean
            addReadTokenRoleOnCreate:
              type: boolean
            enabled:
              type: boolean
            firstBrokerLoginFlowAlias:
              type: string
            linkOnly:
              type: boolean
            postBrokerLoginFlowAlias:
              type: string
            trustEmail:
              type: boolean
            authenticateByDefault:
              type: boolean
          example:
            providerId: ''
            config:
              authorizationUrl: ''
              tokenUrl: ''
              logoutUrl: ''
              clientAuthMethod: ''
              syncMode: ''
              clientId: ''
              clientSecret: ''
              jwksUrl: ''
              userInfoUrl: ''
              defaultScope: ''
              validateSignature: false
              backchannelSupported: false
              disableUserInfo: false
              hideOnLoginPage: false
              issuer: ''
              useJwksUrl: false
            alias: ''
            storeToken: false
            addReadTokenRoleOnCreate: false
            enabled: false
            firstBrokerLoginFlowAlias: ''
            linkOnly: false
            postBrokerLoginFlowAlias: ''
            trustEmail: false
            authenticateByDefault: false
        KeycloakOpenIDClient:
          required:
            - clientId
            - surrogateAuthRequired
            - enabled
            - alwaysDisplayInConsole
            - clientAuthenticatorType
            - redirectUris
            - webOrigins
            - notBefore
            - bearerOnly
            - consentRequired
            - standardFlowEnabled
            - implicitFlowEnabled
            - directAccessGrantsEnabled
            - serviceAccountsEnabled
            - publicClient
            - frontchannelLogout
            - protocol
            - attributes
            - authenticationFlowBindingOverrides
            - fullScopeAllowed
            - nodeReRegistrationTimeout
            - defaultClientScopes
            - optionalClientScopes
            - access
          type: object
          properties:
            clientId:
              type: string
            surrogateAuthRequired:
              type: boolean
            enabled:
              type: boolean
            alwaysDisplayInConsole:
              type: boolean
            clientAuthenticatorType:
              type: string
            redirectUris:
              type: string
              nullable: true
            webOrigins:
              type: string
              nullable: true
            notBefore:
              type: integer
              format: int32
            bearerOnly:
              type: boolean
            consentRequired:
              type: boolean
            standardFlowEnabled:
              type: boolean
            implicitFlowEnabled:
              type: boolean
            directAccessGrantsEnabled:
              type: boolean
            serviceAccountsEnabled:
              type: boolean
            publicClient:
              type: boolean
            frontchannelLogout:
              type: boolean
            protocol:
              type: string
            attributes:
              required:
                - saml.assertion.signature
                - saml.force.post.binding
                - saml.multivalued.roles
                - saml.encrypt
                - backchannel.logout.revoke.offline.tokens
                - saml.server.signature
                - saml.server.signature.keyinfo.ext
                - exclude.session.state.from.auth.response
                - backchannel.logout.session.required
                - backchannel.logout.url
                - client_credentials.use_refresh_token
                - saml_force_name_id_format
                - saml.client.signature
                - tls.client.certificate.bound.access.tokens
                - saml.authnstatement
                - display.on.consent.screen
                - saml.onetimeuse.condition
              type: object
              properties:
                saml.assertion.signature:
                  type: string
                saml.force.post.binding:
                  type: string
                saml.multivalued.roles:
                  type: string
                saml.encrypt:
                  type: string
                backchannel.logout.revoke.offline.tokens:
                  type: string
                saml.server.signature:
                  type: string
                saml.server.signature.keyinfo.ext:
                  type: string
                exclude.session.state.from.auth.response:
                  type: string
                backchannel.logout.session.required:
                  type: string
                backchannel.logout.url:
                  type: string
                client_credentials.use_refresh_token:
                  type: string
                saml_force_name_id_format:
                  type: string
                saml.client.signature:
                  type: string
                tls.client.certificate.bound.access.tokens:
                  type: string
                saml.authnstatement:
                  type: string
                display.on.consent.screen:
                  type: string
                saml.onetimeuse.condition:
                  type: string
            authenticationFlowBindingOverrides:
              required:
                - direct_grant
                - browser
              type: object
              properties:
                direct_grant:
                  type: string
                browser:
                  type: string
            fullScopeAllowed:
              type: boolean
            nodeReRegistrationTimeout:
              type: integer
              format: int32
            defaultClientScopes:
              type: string
              nullable: true
            optionalClientScopes:
              type: string
              nullable: true
            access:
              required:
                - view
                - configure
                - manage
              type: object
              properties:
                view:
                  type: boolean
                configure:
                  type: boolean
                manage:
                  type: boolean
        ExternalIdentityProviderAvailable:
          type: boolean
    ConsentAgreement:
      required:
        - ID
        - Name
        - Description
        - LawfulUsage
        - LawfulBasisOfProcessing
        - PolicyURL
        - AttributeType
        - Jurisdiction
        - Disclosure
        - IndustryScope
        - DataRetention
        - Restriction
        - Shared3PP
        - Version
        - PublishFlag
      type: object
      properties:
        ID:
          type: string
        Name:
          type: string
        Description:
          type: string
        LawfulUsage:
          type: boolean
        LawfulBasisOfProcessing:
          type: integer
          format: int32
        PolicyURL:
          type: string
        AttributeType:
          type: integer
          format: int32
        Jurisdiction:
          type: string
        Disclosure:
          type: string
        IndustryScope:
          type: string
        DataRetention:
          required:
            - RetentionPeriod
            - Enabled
          type: object
          properties:
            RetentionPeriod:
              type: integer
              format: int32
            Enabled:
              type: boolean
        Restriction:
          type: string
        Shared3PP:
          type: boolean
        Version:
          type: string
        PublishFlag:
          type: boolean
    DataAttribute:
      required:
        - consent
        - description
        - purposeids
      type: object
      properties:
        consent:
          type: string
        description:
          type: string
        purposeids:
          type: array
          items:
            type: string
      example:
        consent: Age
        description: example
        purposeids:
          - 64ecf184e2f6a8000142c678
    DataRequest:
      required:
        - ID
        - UserID
        - UserName
        - OrgID
        - Type
        - TypeStr
        - State
        - RequestedDate
        - ClosedDate
        - StateStr
        - Comment
      type: object
      properties:
        ID:
          type: string
        UserID:
          type: string
        UserName:
          type: string
        OrgID:
          type: string
        Type:
          type: integer
          format: int32
        TypeStr:
          type: string
        State:
          type: integer
          format: int32
        RequestedDate:
          type: string
        ClosedDate:
          type: string
        StateStr:
          type: string
        Comment:
          type: string
      example:
        ID: 64ee6e86e2f6a8000142c68f
        UserID: 638de3302f5d1700014431f3
        UserName: george@igrant.io
        OrgID: 64ec561de2f6a8000142c671
        Type: 2
        TypeStr: Download Data
        State: 1
        RequestedDate: '2023-08-29 22:17:42 +0000 UTC'
        ClosedDate: '0001-01-01 00:00:00 +0000 UTC'
        StateStr: Request initiated
        Comment: ''
  securitySchemes:
    BearerAuth:
      description: Access token passed with Bearer prefix in Authorization header
      type: http
      scheme: bearer
      bearerFormat: JWT
