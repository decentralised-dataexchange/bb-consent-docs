openapi: "3.1.0"
info:
  version: "2023.8.2"
  title: "Consent Building Block APIs"
  description: >
    The Consent Building Block enables services for individuals to approve the use 
    of their personal data by defining the principles, functions, and architecture 
    of an information system. For organisations that process personal data, it 
    provides the ability to know the individual's will and legitimately process such 
    personal data. The Consent Building Block is a process-oriented GovStack Building Block 
    facilitating auditable bilateral agreements within a multi-agent environment that 
    integrates with most other Building Blocks.
  contact:
    email: support@igrant.io
    name: iGrant.io
    url: https://igrant.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: https://api.bb-consent.dev/v2
    description: Development server
  - url: https://staging-consent-bb-api.igrant.io/v2
    description: Staging server
  - url: https://demo-consent-bb-api.igrant.io/v2
    description: Demo server
tags:
  - name: audit
    x-tag-expanded: false
    description: >
      Operations for external auditing systems to query detailed data from the system and subscribe to notifications.
  - name: config
    x-tag-expanded: false
    description: >
      Secured operations available to organization API integration
  - name: service
    x-tag-expanded: false
    description: >
      Secured operations for individuals, data consumers and applications to record and verify consent
  - name: onboard
    x-tag-expanded: false
    description: >
      These are used for onboard the organisation, organisation admin and individual users to the system. 
      It also deals with all authentication and authorisation APIs that can be configured towards external IDPs.
paths:
  /config/policy/:
    post:
      tags:
        - config
      summary: "CREATE - Creates a new Policy object and returns the new object and a PolicyRevision"
      operationId: "configCreatePolicy"
      description: "CREATE - Creates a new Policy object and returns the new object and a PolicyRevision"
      parameters: []
      x-specification-usecase: "UC-C-PIC-A-001"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Policy"
      responses:
        "200":
          description: "A set consisting of the new Policy object created, together with the initial Revision object."

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Policy"
                    - $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                policy:
                  $ref: "#/components/schemas/Policy"
                  description: An object of type Policy

              required:
                - policy

  /config/policy/{policyId}/:
    get:
      tags:
        - config
      summary: "READ - get a Policy object + latest Revision. If a PolicyFilter is supplied and contains a revision_id, then this specific revision is returned."
      operationId: "configReadPolicy"
      description: "READ - get a Policy object + latest Revision. If a PolicyFilter is supplied and contains a revision_id, then this specific revision is returned."
      parameters:
        - in: path
          name: "policyId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

        - in: query
          name: revisionId
          description: "An object with id revisionId"
          required: false
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-A-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Policy"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Policy"
                    - $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

    put:
      tags:
        - config
      summary: "UPDATE - Updates an existing Policy object, returning the updated version and a new revision. Updating a Policy does not affect existing references in Agreement, the new revision should be specified for Agreement."
      operationId: "configUpdatePolicy"
      description: "UPDATE - Updates an existing Policy object, returning the updated version and a new revision. Updating a Policy does not affect existing references in Agreement, the new revision should be specified for Agreement."
      parameters:
        - in: path
          name: "policyId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-A-002"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Policy"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Policy"
                    - $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                policy:
                  $ref: "#/components/schemas/Policy"
                  description: An object of type Policy

              required:
                - policy

    delete:
      tags:
        - config
      summary: "DELETE - Deletes an existing Policy object, returning the updated version and a new revision. Deleting a Policy is not possible if it's associated with active Agreement."
      operationId: "configDeletePolicy"
      description: "DELETE - Deletes an existing Policy object, returning the updated version and a new revision. Deleting a Policy is not possible if it's associated with active Agreement."
      parameters:
        - in: path
          name: "policyId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-A-004"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Policy"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

  /config/policy/{policyId}/revisions/:
    get:
      tags:
        - config
      summary: "LIST - returns the current Policy"
      operationId: "configListPolicyRevisions"
      description: "LIST - returns the current Policy"
      parameters:
        - in: path
          name: "policyId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: "UC-C-PIC-A-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Revision"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

  /config/policies/:
    get:
      tags:
        - config
      summary: "Returns a list of readable Policy objects"
      operationId: "configListPolicy"
      description: "LIST - Fetches list of readable Policy objects"
      parameters:
        - in: query
          name: revisionId
          description: "An object with id revisionId"
          required: false
          schema:
            type: string

        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: "UC-C-PIC-A-001, UC-C-PIC-A-002"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Policy"
      responses:
        "200":
          description: "A list of Policy objects readable for the current session's credentials."

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Policy"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [admin]

  /config/agreement/{agreementId}/:
    get:
      tags:
        - config
      summary: "READ - fetches the latest version of an Agreement"
      operationId: "configReadAgreement"
      description: "READ - fetches the latest version of an Agreement"
      parameters:
        - in: path
          name: "agreementId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-A-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Agreement"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Agreement"
                    - $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

    put:
      tags:
        - config
      summary: "UPDATE - An existing Agreement object is created and returned together with AgreementRevision"
      operationId: "configUpdateAgreement"
      description: "UPDATE - An existing Agreement object is created and returned together with AgreementRevision"
      parameters:
        - in: path
          name: "agreementId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-A-002"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Agreement"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Agreement"
                    - $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                agreement:
                  $ref: "#/components/schemas/Agreement"
                  description: An object of type Agreement

              required:
                - agreement

    delete:
      tags:
        - config
      summary: ""
      operationId: "configDeleteAgreement"
      description: ""
      parameters:
        - in: path
          name: "agreementId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-A-004"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Agreement"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

  /config/agreement/:
    post:
      tags:
        - config
      summary: "CREATE - A new Agreement object is created and returned together with AgreementRevision"
      operationId: "configCreateAgreement"
      description: "CREATE - A new Agreement object is created and returned together with AgreementRevision"
      parameters: []
      x-specification-usecase: "UC-C-PIC-A-001"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Agreement"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Agreement"
                    - $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                agreement:
                  $ref: "#/components/schemas/Agreement"
                  description: An object of type Agreement

              required:
                - agreement

  /config/agreements/:
    get:
      tags:
        - config
      summary: "LIST - fetch all Agreements"
      operationId: "configListAgreement"
      description: "LIST - fetch all Agreements"
      parameters:
        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: "UC-C-PIC-A-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Agreement"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Agreement"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

    post:
      tags:
        - config
      summary: "LIST - fetch Agreements matching AgreementFilter"
      operationId: "configListAgreementFilter"
      description: "LIST - fetch Agreements matching AgreementFilter"
      parameters:
        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: "UC-C-PIC-A-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Agreement"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Agreement"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                agreementFilter:
                  $ref: "#/components/schemas/AgreementFilter"
                  description: An object of type AgreementFilter

              required:
                - agreementFilter

  /service/individual/:
    post:
      tags:
        - service
      summary: "CREATE - Creates an Individual in the Consent system"
      operationId: "serviceIndividualCreate"
      description: "CREATE - Creates an Individual in the Consent system"
      parameters: []
      x-specification-usecase: ""
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: "Individual"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Individual"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                individual:
                  $ref: "#/components/schemas/Individual"
                  description: An object of type Individual

              required:
                - individual

  /service/individual/{individualId}/:
    get:
      tags:
        - service
      summary: "READ - Fetch an Individual in the Consent system"
      operationId: "serviceIndividualRead"
      description: "READ - Fetch an Individual in the Consent system"
      parameters:
        - in: path
          name: "individualId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: ""
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: "Individual"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Individual"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

    put:
      tags:
        - service
      summary: "UPDATE - Updates an Individual in the Consent system"
      operationId: "serviceIndividualUpdate"
      description: "UPDATE - Updates an Individual in the Consent system"
      parameters:
        - in: path
          name: "individualId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: ""
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: "Individual"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Individual"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                individual:
                  $ref: "#/components/schemas/Individual"
                  description: An object of type Individual

              required:
                - individual

    delete:
      tags:
        - service
      summary: "DELETE - entirely removes an individual from the system and cascades necessary actions to related ConsentRecord objects"
      operationId: "serviceIndividualDelete"
      description: "DELETE - entirely removes an individual from the system and cascades necessary actions to related ConsentRecord objects"
      parameters:
        - in: path
          name: "individualId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: ""
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: "Individual"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Individual"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

  /service/individuals/:
    get:
      tags:
        - service
      summary: "LIST - lists individuals in the system"
      operationId: "serviceIndividualList"
      description: "LIST - lists individuals in the system"
      parameters:
        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: ""
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: "Individual"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Individual"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

    post:
      tags:
        - service
      summary: "LIST - lists individuals in the system"
      operationId: "serviceIndividualListFilter"
      description: "LIST - lists individuals in the system"
      parameters:
        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: ""
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: "Individual"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Individual"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                individualFilter:
                  $ref: "#/components/schemas/IndividualFilter"
                  description: An object of type IndividualFilter

              required:
                - individualFilter

  /service/agreement/{agreementId}/:
    get:
      tags:
        - service
      summary: "READ - fetches the latest version of an Agreement"
      operationId: "serviceAgreementRead"
      description: "READ - fetches the latest version of an Agreement"
      parameters:
        - in: path
          name: "agreementId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-A-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Agreement"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Agreement"
                    - $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

  /service/policy/{policyId}/:
    get:
      tags:
        - service
      summary: "READ - fetches the latest version of a Policy and the presented revisionId of an associated Agreement"
      operationId: "servicePolicyRead"
      description: "READ - fetches the latest version of a Policy and the presented revisionId of an associated Agreement"
      parameters:
        - in: path
          name: "policyId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

        - in: query
          name: revisionId
          description: "An object with id revisionId"
          required: false
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-A-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "Policy"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Policy"
                    - $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

  /service/purpose/{purposeId}/:
    get:
      tags:
        - service
      summary: "READ - fetches the latest version of an AgreementPurpose and the presented revisionId of that Agreement"
      operationId: "serviceAgreementPurposeRead"
      description: "READ - fetches the latest version of an AgreementPurpose and the presented revisionId of that Agreement"
      parameters:
        - in: path
          name: "purposeId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

        - in: query
          name: revisionId
          description: "An object with id revisionId"
          required: false
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-A-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "AgreementPurpose"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/AgreementPurpose"
                    - $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

  /service/agreement/{agreementId}/agreementdata/:
    get:
      tags:
        - service
      summary: "READ - fetches a list of latest versions of AgreementData associated with an Agreement and the presented revisionId of that Agreement"
      operationId: "serviceAgreementDataRead"
      description: "READ - fetches a list of latest versions of AgreementData associated with an Agreement and the presented revisionId of that Agreement"
      parameters:
        - in: path
          name: "agreementId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

        - in: query
          name: revisionId
          description: "An object with id revisionId"
          required: false
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-A-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: "AgreementData"
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/AgreementData"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [org]

  /service/verification/agreements/:
    get:
      tags:
        - service
      summary: "LIST - Fetch consent records"
      operationId: "serviceVerificationAgreementList"
      description: "LIST - Fetch consent records"
      parameters:
        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: "UC-C-PIC-A-003"
      x-specification-scenario: "1.1"
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/ConsentRecord"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [consumer]

    post:
      tags:
        - service
      summary: "LIST - Fetch consent records for supplied AgreementFilter"
      operationId: "serviceVerificationAgreementListFilter"
      description: "LIST - Fetch consent records for supplied AgreementFilter"
      parameters:
        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: "UC-C-PIC-A-003"
      x-specification-scenario: "1.1"
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/ConsentRecord"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [consumer]

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                agreementFilter:
                  $ref: "#/components/schemas/AgreementFilter"
                  description: An object of type AgreementFilter

              required:
                - agreementFilter

  /service/verification/agreement/{agreementId}/:
    get:
      tags:
        - service
      summary: "READ - Fetch a specific Consent Record (latest revision). Individual ID supplied as HTTP header."
      operationId: "serviceVerificationAgreementConsentRecordRead"
      description: "READ - Fetch a specific Consent Record (latest revision). Individual ID supplied as HTTP header."
      parameters:
        - in: path
          name: "agreementId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-A-003"
      x-specification-scenario: "1.2"
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/ConsentRecord"
                    - $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [consumer]

  /service/verification/consentrecords/:
    post:
      tags:
        - service
      summary: "LIST - Fetch consent records (latest revision). For a given ConsentRecordFilter, query if consent exists."
      operationId: "serviceVerificationConsentRecordList"
      description: "LIST - Fetch consent records (latest revision). For a given ConsentRecordFilter, query if consent exists."
      parameters:
        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: "UC-C-PIC-A-003"
      x-specification-scenario: "3.1, 1.2"
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/ConsentRecord"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [consumer]

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                consentRecordFilter:
                  $ref: "#/components/schemas/ConsentRecordFilter"
                  description: An object of type ConsentRecordFilter

              required:
                - consentRecordFilter

  /service/individual/record/agreement/{agreementId}/:
    post:
      tags:
        - service
      summary: "CREATE - For a particular Individual and a particular Agreement, create a new Consent Record pointing to the current Revision of a given Agreement. Individual ID supplied as HTTP header."
      operationId: "serviceCreateIndividualConsentRecord"
      description: "CREATE - For a particular Individual and a particular Agreement, create a new Consent Record pointing to the current Revision of a given Agreement. Individual ID supplied as HTTP header."
      parameters:
        - in: path
          name: "agreementId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

        - in: query
          name: individualId
          description: "An object with id individualId"
          required: true
          schema:
            type: string

        - in: query
          name: revisionId
          description: "An object with id revisionId"
          required: false
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-I-002"
      x-specification-scenario: "1.2"
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/ConsentRecord"
                    - $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [individual]

    get:
      tags:
        - service
      summary: "READ - Individual ID supplied as HTTP header. Fetches the current ConsentRecord for an Agreement. There should be one unambiguous ConsentRecord for an Individual and an Agreement."
      operationId: "serviceReadIndividualRecordRead"
      description: "READ - Individual ID supplied as HTTP header. Fetches the current ConsentRecord for an Agreement. There should be one unambiguous ConsentRecord for an Individual and an Agreement."
      parameters:
        - in: path
          name: "agreementId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-I-001"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsentRecord"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [individual]

  /service/individual/record/consentrecord/draft/:
    post:
      tags:
        - service
      summary: "CREATE - Gets a DRAFT (unsaved) ConsentRecord and Signature objects (without a PK) for a given agreementId."
      operationId: "serviceCreateIndividualConsentRecordDraft"
      description: "CREATE - Gets a DRAFT (unsaved) ConsentRecord and Signature objects (without a PK) for a given agreementId."
      parameters:
        - in: query
          name: individualId
          description: "An object with id individualId"
          required: true
          schema:
            type: string

        - in: query
          name: agreementId
          description: "An object with id agreementId"
          required: true
          schema:
            type: string

        - in: query
          name: revisionId
          description: "An object with id revisionId"
          required: false
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-I-002"
      x-specification-scenario: "1.2"
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/ConsentRecord"
                    - $ref: "#/components/schemas/Signature"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [individual]

  /service/individual/record/consentrecord/:
    post:
      tags:
        - service
      summary: "CREATE - Creates a paired ConsentRecord and Signature object. Returns the same objects with the PK defined."
      operationId: "serviceCreateIndividualConsentRecordAndSignature"
      description: "CREATE - Creates a paired ConsentRecord and Signature object. Returns the same objects with the PK defined."
      parameters: []
      x-specification-usecase: "UC-C-PIC-I-002"
      x-specification-scenario: "1.2"
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/ConsentRecord"
                    - $ref: "#/components/schemas/Revision"
                    - $ref: "#/components/schemas/Signature"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [individual]

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                consentRecord:
                  $ref: "#/components/schemas/ConsentRecord"
                  description: An object of type ConsentRecord

                signature:
                  $ref: "#/components/schemas/Signature"
                  description: An object of type Signature

              required:
                - consentRecord

                - signature

  /service/individual/record/consentrecord/{consentRecordId}/:
    put:
      tags:
        - service
      summary: "UPDATE* - Update a particular Consent Record. Individual ID supplied as HTTP header. Note that updating a signed Consent Record invalidates its signature."
      operationId: "serviceUpdateIndividualConsentRecord"
      description: "UPDATE* - Update a particular Consent Record. Individual ID supplied as HTTP header. Note that updating a signed Consent Record invalidates its signature."
      parameters:
        - in: path
          name: "consentRecordId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

        - in: query
          name: individualId
          description: "An object with id individualId"
          required: true
          schema:
            type: string

        - in: query
          name: agreementId
          description: "An object with id agreementId"
          required: true
          schema:
            type: string

        - in: query
          name: revisionId
          description: "An object with id revisionId"
          required: false
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-I-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/ConsentRecord"
                    - $ref: "#/components/schemas/Revision"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [individual]

  /service/individual/record/consentrecord/{consentRecordId}/signature/:
    post:
      tags:
        - service
      summary: "CREATE - Creates and returns a blank Signature object for the Consent Record."
      operationId: "serviceCreateIndividualConsentRecordSignature"
      description: "CREATE - Creates and returns a blank Signature object for the Consent Record."
      parameters:
        - in: path
          name: "consentRecordId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-Post-Partum-001-Registration_PostPartum_and_InfantCare"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Signature"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [individual]

    put:
      tags:
        - service
      summary: "UPDATE - Updates a Signature object for a Consent Record. This is used to add a signature to an existing unsigned Signature object. Consent BB is responsible for updating the Consent Record state."
      operationId: "serviceUpdateIndividualConsentRecordSignature"
      description: "UPDATE - Updates a Signature object for a Consent Record. This is used to add a signature to an existing unsigned Signature object. Consent BB is responsible for updating the Consent Record state."
      parameters:
        - in: path
          name: "consentRecordId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-Post-Partum-001-Registration_PostPartum_and_InfantCare"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Signature"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [individual]

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: "#/components/schemas/Signature"
                  description: An object of type Signature

              required:
                - signature

  /service/individual/record/agreement/{agreementId}/all/:
    get:
      tags:
        - service
      summary: "LIST - Fetches all consent records given to a particular agreement. Individual ID supplied as HTTP header."
      operationId: "serviceListIndividualAgreementConsentRecordList"
      description: "LIST - Fetches all consent records given to a particular agreement. Individual ID supplied as HTTP header."
      parameters:
        - in: path
          name: "agreementId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: "UC-C-PIC-I-001"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/ConsentRecord"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [individual]

  /service/individual/record/:
    get:
      tags:
        - service
      summary: "LIST - Fetches all current unambiguous consent records stored for Individual ID. Individual ID supplied as HTTP header."
      operationId: "serviceListIndividualConsentRecordList"
      description: "LIST - Fetches all current unambiguous consent records stored for Individual ID. Individual ID supplied as HTTP header."
      parameters:
        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: "UC-C-PIC-I-001"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/ConsentRecord"

        "400":
          description: bad input parameter
      security:
        - OAuth2: [individual]

    delete:
      tags:
        - service
      summary: 'DELETE - Cascading delete operation for Right To Be Forgotten, deletes all Consent Records that shall not be retained and have a "forgettable" Agreement. May also delete an unsigned Consent Record, for instance in cases where the user exits the signing process. Individual ID supplied as HTTP header.'
      operationId: "serviceDeleteAllRecords"
      description: 'DELETE - Cascading delete operation for Right To Be Forgotten, deletes all Consent Records that shall not be retained and have a "forgettable" Agreement. May also delete an unsigned Consent Record, for instance in cases where the user exits the signing process. Individual ID supplied as HTTP header.'
      parameters: []
      x-specification-usecase: "UC-C-PIC-I-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "True"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

        "400":
          description: bad input parameter
      security:
        - OAuth2: [individual]

  /audit/trackers/:
    get:
      tags:
        - auditor
      summary: "LIST - show available AuditTracker objects"
      operationId: "auditListTrackers"
      description: "LIST - show available AuditTracker objects"
      parameters:
        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: "UC-C-PIC-AT-001, UC-C-PIC-AT-002"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/AuditTracker"

        "400":
          description: bad input parameter
      security:
        - OAuth2: []

  /audit/tracker/:
    post:
      tags:
        - auditor
      summary: "CREATE - A new AuditTracker is set up"
      operationId: "auditCreateTracker"
      description: "CREATE - A new AuditTracker is set up"
      parameters: []
      x-specification-usecase: "UC-C-PIC-AT-001, UC-C-PIC-AT-002"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditTracker"

        "400":
          description: bad input parameter
      security:
        - OAuth2: []

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                auditTracker:
                  $ref: "#/components/schemas/AuditTracker"
                  description: An object of type AuditTracker

              required:
                - auditTracker

  /audit/tracker/{trackerId}/:
    get:
      tags:
        - auditor
      summary: "READ - get the details of an AuditTracker"
      operationId: "auditReadTracker"
      description: "READ - get the details of an AuditTracker"
      parameters:
        - in: path
          name: "trackerId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-AT-001, UC-C-PIC-AT-002"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditTracker"

        "400":
          description: bad input parameter
      security:
        - OAuth2: []

    put:
      tags:
        - auditor
      summary: "UPDATE - get the details of an AuditTracker"
      operationId: "auditUpdateTracker"
      description: "UPDATE - get the details of an AuditTracker"
      parameters:
        - in: path
          name: "trackerId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-AT-001, UC-C-PIC-AT-002"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditTracker"

        "400":
          description: bad input parameter
      security:
        - OAuth2: []

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                auditTracker:
                  $ref: "#/components/schemas/AuditTracker"
                  description: An object of type AuditTracker

              required:
                - auditTracker

    delete:
      tags:
        - auditor
      summary: "DELETE - removes an AuditTracker"
      operationId: "auditDeleteTracker"
      description: "DELETE - removes an AuditTracker"
      parameters:
        - in: path
          name: "trackerId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-AT-001, UC-C-PIC-AT-002"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditTracker"

        "400":
          description: bad input parameter
      security:
        - OAuth2: []

  /audit/consentrecords/:
    post:
      tags:
        - auditor
      summary: "LIST - fetch ConsentRecord objects"
      operationId: "auditConsentRecordList"
      description: "LIST - fetch ConsentRecord objects"
      parameters:
        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: "UC-C-PIC-AT-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/ConsentRecord"

        "400":
          description: bad input parameter
      security:
        - OAuth2: []

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                consentRecordFilter:
                  $ref: "#/components/schemas/ConsentRecordFilter"
                  description: An object of type ConsentRecordFilter

              required:
                - consentRecordFilter

  /audit/consentrecord/{consentRecordId}/:
    get:
      tags:
        - auditor
      summary: "READ"
      operationId: "auditConsentRecordRead"
      description: "READ"
      parameters:
        - in: path
          name: "consentRecordId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: ""
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsentRecord"

        "400":
          description: bad input parameter
      security:
        - OAuth2: []

  /audit/agreements/:
    post:
      tags:
        - auditor
      summary: "LIST - fetch all Agreements stored in the system."
      operationId: "auditAgreementList"
      description: "LIST - fetch all Agreements stored in the system."
      parameters:
        - in: query
          name: "offset"
          description: "Requested index for start of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

        - in: query
          name: "limit"
          description: "Requested number of resources to be provided in response requested by client"
          required: false
          schema:
            type: integer

      x-specification-usecase: "UC-C-PIC-AT-001, UC-C-PIC-AT-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Agreement"

        "400":
          description: bad input parameter
      security:
        - OAuth2: []

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                agreementFilter:
                  $ref: "#/components/schemas/AgreementFilter"
                  description: An object of type AgreementFilter

              required:
                - agreementFilter

  /audit/agreement/{agreementId}/:
    get:
      tags:
        - auditor
      summary: "READ - fetch a single Agreement."
      operationId: "auditReadRecord"
      description: "READ - fetch a single Agreement."
      parameters:
        - in: path
          name: "agreementId"
          description: "Unique ID of an object"
          required: true
          schema:
            type: string

      x-specification-usecase: "UC-C-PIC-AT-001, UC-C-PIC-AT-003"
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agreement"

        "400":
          description: bad input parameter
      security:
        - OAuth2: []

  /status/startup/:
    get:
      tags:
        - status
      summary: "DRAFT: This endpoint relates to a proposal for generic liveness/readiness API endpoints for building blocks"
      operationId: "statusStartup"
      description: "DRAFT: This endpoint relates to a proposal for generic liveness/readiness API endpoints for building blocks"
      parameters: []
      x-specification-usecase: ""
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

        "400":
          description: bad input parameter
      security:
        - OAuth2: []

  /status/readiness/:
    get:
      tags:
        - status
      summary: "DRAFT: This endpoint relates to a proposal for generic liveness/readiness API endpoints for building blocks"
      operationId: "statusReadiness"
      description: "DRAFT: This endpoint relates to a proposal for generic liveness/readiness API endpoints for building blocks"
      parameters: []
      x-specification-usecase: ""
      x-specification-scenario: ""
      x-specification-pii-or-sensitive: "False"
      x-specification-crudl-model: ""
      responses:
        "200":
          description: ""

        "400":
          description: bad input parameter
      security:
        - OAuth2: []

components:
  schemas:
    Individual:
      $ref: "./definitions/Individual.yaml"

    Agreement:
      $ref: "./definitions/Agreement.yaml"

    AgreementData:
      $ref: "./definitions/AgreementData.yaml"

    Policy:
      $ref: "./definitions/Policy.yaml"

    ConsentRecord:
      $ref: "./definitions/ConsentRecord.yaml"
    Revision:
      $ref: "./definitions/Revision.yaml"

    AgreementFilter:
      $ref: "./definitions/AgreementFilter.yaml"

    ConsentRecordFilter:
      $ref: "./definitions/ConsentRecordFilter.yaml"

    Controller:
      $ref: "./definitions/Controller.yaml"

    Signature:
      $ref: "./definitions/Signature.yaml"
    AgreementPurpose:
      $ref: "./definitions/AgreementPurpose.yaml"
    AgreementLifecycle:
      $ref: "./definitions/AgreementLifecycle.yaml"

    IndividualFilter:
      $ref: "./definitions/IndividualFilter.yaml"

    AuditTracker:
      $ref: "./definitions/AuditTracker.yaml"
    AuditEventType:
      $ref: "./definitions/AuditEventType.yaml"

    StatusStartup:
      $ref: "./definitions/StatusStartup.yaml"

    StatusReadiness:
      $ref: "./definitions/StatusReadiness.yaml"
  securitySchemes:
    BearerAuth:
      description: Access token passed with Bearer prefix in Authorization header
      type: http
      scheme: bearer
      bearerFormat: JWT
