openapi: 3.0.0
info:
  version: 2023.8.2
  title: Consent Building Block APIs
  description: |
    The Consent Building Block enables services for individuals to approve the use  of their personal data by defining the principles, functions, and architecture  of an information system. For organisations that process personal data, it  provides the ability to know the individual's will and legitimately process such  personal data. The Consent Building Block is a process-oriented GovStack Building Block  facilitating auditable bilateral agreements within a multi-agent environment that  integrates with most other Building Blocks.
  contact:
    email: support@igrant.io
    name: iGrant.io
    url: 'https://igrant.io'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
servers:
  - url: 'https://api.bb-consent.dev/v2'
    description: Development server
  - url: 'https://staging-consent-bb-api.igrant.io/v2'
    description: Staging server
  - url: 'https://demo-consent-bb-api.igrant.io/v2'
    description: Demo server
tags:
  - name: audit
    x-tag-expanded: false
    description: |
      These API(s) allow managing and viewing the consents and their audit trails. The audit trails  of consent management are vital to individuals and organisations in case of disputes or for  other reasons where it is necessary to ascertain a transaction's validity.
  - name: config
    x-tag-expanded: false
    description: |
      The Organisational API(s) allow administrators to configure consent-related aspects  from an organisational perspective. The notification APIs using webhooks are also part  of this category. E.g. These are used for notifications and callbacks to organisation's  IT systems. The administrators configure these, and the notifications may be towards the  organisation's IT system or towards individual users.
  - name: service
    x-tag-expanded: false
    description: |
      These API(s) sets allow individual users to view and manage their consent-related information about their organisation.
  - name: onboard
    x-tag-expanded: false
    description: |
      These are used for onboard the organisation, organisation admin and individual users to the system.  It also deals with all authentication and authorisation APIs that can be configured towards external IDPs.
paths:
  /config/policy:
    get:
      tags:
        - config
      description: Get global policy configurations
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalDataPolicyConfiguration'
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
    post:
      tags:
        - config
      description: Update global policy configurations
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalDataPolicyConfiguration'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalDataPolicyConfiguration'
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
  '/config/policy/{policyId}':
    $ref: '#/paths/~1config~1policy'
  '/config/policy/{policyId}/revisions':
    $ref: '#/paths/~1config~1policy'
  /config/policies:
    $ref: '#/paths/~1config~1policy'
  '/config/data-agreement/{dataAgreementId}':
    $ref: '#/paths/~1config~1data-agreement'
  /config/data-agreement:
    post:
      tags:
        - config
      description: Add data agreement
      requestBody:
        content:
          application/json:
            schema:
              required:
                - purposes
              type: object
              properties:
                purposes:
                  type: array
                  items:
                    $ref: '#/components/schemas/DataAgreement'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
    get:
      tags:
        - config
      description: Get data agreements
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - OrgID
                  - Purposes
                type: object
                properties:
                  OrgID:
                    type: string
                  Purposes:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataAgreement'
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
  /config/data-agreements:
    $ref: '#/paths/~1config~1data-agreement'
  '/config/data-agreement/{dataAgreementId}/revisions':
    $ref: '#/paths/~1config~1data-agreement'
  '/config/data-agreement/{dataAgreementId}/revision/{revisionId}':
    $ref: '#/paths/~1config~1data-agreement'
  /config/data-agreements/data-attributes:
    $ref: '#/paths/~1config~1data-agreements~1data-attribute'
  /config/data-agreements/data-attribute:
    post:
      tags:
        - config
      description: Add data attributes
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data-attributes
              type: object
              properties:
                data-attributes:
                  type: array
                  items:
                    $ref: '#/components/schemas/DataAttribute'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
    get:
      tags:
        - config
      description: Get data attributes
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - OrgID
                  - Templates
                type: object
                properties:
                  OrgID:
                    type: string
                  Templates:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataAttribute'
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
  '/config/data-agreements/data-attribute/{dataAttributeId}"':
    $ref: '#/paths/~1config~1data-agreements~1data-attribute'
  /config/webhooks/event-types:
    $ref: '#/paths/~1config~1webhooks'
  /config/webhooks/payload/content-types:
    $ref: '#/paths/~1config~1webhooks'
  /config/webhooks:
    post:
      tags:
        - config
      description: Create webhook
      requestBody:
        content:
          application/json:
            schema:
              required:
                - payloadurl
                - subscribedevents
                - contenttype
                - secretkey
                - disabled
                - skipsslverification
              type: object
              properties:
                payloadurl:
                  type: string
                subscribedevents:
                  type: array
                  items:
                    type: string
                contenttype:
                  type: string
                secretkey:
                  type: string
                disabled:
                  type: boolean
                skipsslverification:
                  type: boolean
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - ID
                  - OrgID
                  - PayloadURL
                  - ContentType
                  - SubscribedEvents
                  - Disabled
                  - SecretKey
                  - SkipSSLVerification
                  - TimeStamp
                type: object
                properties:
                  ID:
                    type: string
                  OrgID:
                    type: string
                  PayloadURL:
                    type: string
                  ContentType:
                    type: string
                  SubscribedEvents:
                    type: array
                    items:
                      type: string
                  Disabled:
                    type: boolean
                  SecretKey:
                    type: string
                  SkipSSLVerification:
                    type: boolean
                  TimeStamp:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
    get:
      tags:
        - config
      description: Get all webhooks for an organisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - ID
                    - PayloadURL
                    - Disabled
                    - TimeStamp
                    - IsLastDeliverySuccess
                  type: object
                  properties:
                    ID:
                      type: string
                    PayloadURL:
                      type: string
                    Disabled:
                      type: boolean
                    TimeStamp:
                      type: string
                    IsLastDeliverySuccess:
                      type: boolean
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
  '/config/webhook/{webhookId}':
    $ref: '#/paths/~1config~1webhooks'
  '/config/webhook/{webhookId}/ping':
    $ref: '#/paths/~1config~1webhooks'
  '/config/webhook/{webhookId}/delivery':
    $ref: '#/paths/~1config~1webhooks'
  '/config/webhook/{webhookId}/delivery/{deliveryId}':
    $ref: '#/paths/~1config~1webhooks'
  '/config/webhook/{webhookId}/delivery/{deliveryId}/redeliver':
    $ref: '#/paths/~1config~1webhooks'
  /config/idp/open-id:
    $ref: '#/paths/~1config~1webhooks'
  /config/admin/apikey:
    post:
      tags:
        - onboard
      description: Create api key
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - User
                  - APIKey
                type: object
                properties:
                  User:
                    type: string
                  APIKey:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
    get:
      tags:
        - onboard
      description: Get api key
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - User
                  - APIKey
                type: object
                properties:
                  User:
                    type: string
                  APIKey:
                    type: string
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
  /config/individuals:
    $ref: '#/paths/~1config~1individual'
  /config/individual:
    post:
      tags:
        - onboard
      description: Register individual
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
                - name
                - password
                - phone
              type: object
              properties:
                username:
                  type: string
                name:
                  type: string
                password:
                  type: string
                phone:
                  type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - msg
                type: object
                properties:
                  msg:
                    type: string
                example:
                  msg: User created successfully
      deprecated: false
  '/config/individual/{individualId}':
    $ref: '#/paths/~1config~1individual'
  '/service/data-agreement/{dataAgreementId}':
    $ref: ''
  '/service/policy/{policyId}':
    $ref: ''
  /service/data-agreements/data-attributes:
    $ref: ''
  /service/verification/data-agreements/:
    $ref: ''
  /service/verification/data-agreement/:
    $ref: ''
  /service/verification/records:
    $ref: ''
  '/service/individual/record/agreement/{agreementId}':
    $ref: ''
  '/service/individual/data-agreement/{dataAgreementId}/record':
    $ref: ''
  '/service/individual/record/consentrecord/{consentRecordId}':
    $ref: ''
  '/service/individual/data-agreement/{dataAgreementRecordId}':
    $ref: ''
  /service/individual/record/agreement:
    $ref: ''
  /service/individual/record/data-agreement:
    $ref: ''
  '/service/individual/record/data-agreement/{dataAgreementId}':
    $ref: ''
  /audit/consentrecords:
    $ref: '#/paths/~1audit~1agreements'
  '/audit/consentrecord/{consentRecordId}':
    $ref: '#/paths/~1audit~1agreement~1%7BagreementId%7D'
  /audit/agreements:
    get:
      tags:
        - audit
      description: List consent records
      parameters:
        - name: consentRecordId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data_agreement_record
                type: object
                properties:
                  data_agreement_record:
                    $ref: '#/components/schemas/DataAgreementRecord'
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
  '/audit/agreement/{agreementId}':
    get:
      tags:
        - audit
      description: Get consent record
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data_agreement_records
                  - pagination
                type: object
                properties:
                  data_agreement_records:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataAgreementRecord'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
  /audit/admin/logs:
    get:
      operationId: getAdminLogs
      description: Get admin logs
      tags:
        - audit
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items to return per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Audit logs for admin user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
  /onboard/admin/login:
    post:
      tags:
        - onboard
      description: Login as organisation admin
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
                - password
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - access_token
                  - expires_in
                  - refresh_expires_in
                  - refresh_token
                  - token_type
                type: object
                properties:
                  access_token:
                    type: string
                  expires_in:
                    type: integer
                    format: int32
                  refresh_expires_in:
                    type: integer
                    format: int32
                  refresh_token:
                    type: string
                  token_type:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                required:
                  - error
                  - error_description
                type: object
                properties:
                  error:
                    type: string
                  error_description:
                    type: string
                example:
                  error: invalid_grant
                  error_description: Invalid user credentials
      deprecated: false
  /onboard/individual/login:
    post:
      tags:
        - onboard
      description: Login as individual
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
                - password
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - User
                  - Token
                type: object
                properties:
                  User:
                    required:
                      - ID
                      - Name
                      - IamID
                      - Email
                      - Phone
                      - ImageID
                      - ImageURL
                      - LastVisit
                      - Client
                      - Orgs
                      - APIKey
                      - Roles
                      - IncompleteProfile
                    type: object
                    properties:
                      ID:
                        type: string
                      Name:
                        type: string
                      IamID:
                        type: string
                      Email:
                        type: string
                      Phone:
                        type: string
                      ImageID:
                        type: string
                      ImageURL:
                        type: string
                      LastVisit:
                        type: string
                      Client:
                        required:
                          - Token
                          - Type
                        type: object
                        properties:
                          Token:
                            type: string
                          Type:
                            type: integer
                            format: int32
                      Orgs:
                        type: array
                        items:
                          required:
                            - OrgID
                            - Name
                            - Location
                            - Type
                            - TypeID
                            - EulaAccepted
                          type: object
                          properties:
                            OrgID:
                              type: string
                            Name:
                              type: string
                            Location:
                              type: string
                            Type:
                              type: string
                            TypeID:
                              type: string
                            EulaAccepted:
                              type: boolean
                      APIKey:
                        type: string
                      Roles:
                        type: array
                        items:
                          required:
                            - RoleID
                            - OrgID
                          type: object
                          properties:
                            RoleID:
                              type: integer
                              format: int32
                            OrgID:
                              type: string
                      IncompleteProfile:
                        type: boolean
                  Token:
                    required:
                      - access_token
                      - expires_in
                      - refresh_expires_in
                      - refresh_token
                      - token_type
                    type: object
                    properties:
                      access_token:
                        type: string
                      expires_in:
                        type: integer
                        format: int32
                      refresh_expires_in:
                        type: integer
                        format: int32
                      refresh_token:
                        type: string
                      token_type:
                        type: string
      deprecated: false
  /onboard/validate/email:
    post:
      tags:
        - onboard
      description: Validate email
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
              type: object
              properties:
                email:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Result
                  - Message
                type: object
                properties:
                  Result:
                    type: boolean
                  Message:
                    type: string
                example:
                  Result: true
                  Message: Email address is valid and not in use in our system
      deprecated: false
      security: []
  /onboard/validate/phone:
    post:
      tags:
        - onboard
      description: Validate phone
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - phone
              type: object
              properties:
                phone:
                  type: string
              example:
                phone: '+918848245047'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Result
                  - Message
                type: object
                properties:
                  Result:
                    type: boolean
                  Message:
                    type: string
                example:
                  Result: false
                  Message: Phone number is in use
      deprecated: false
      security: []
  /onboard/verify/phone:
    post:
      tags:
        - onboard
      description: For OTP verification of the given phone number
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - phone
              type: object
              properties:
                email:
                  type: string
                phone:
                  type: string
              example:
                email: george@yopmail.com
                phone: '+918848245047'
        required: true
      responses:
        '204':
          description: No Content
          content: {}
      deprecated: false
      security: []
  /onboard/verify/otp:
    post:
      tags:
        - onboard
      description: Verify OTP
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - phone
                - otp
              type: object
              properties:
                phone:
                  type: string
                otp:
                  type: string
              example:
                phone: '+918848245047'
                otp: '333363'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Result
                  - Message
                type: object
                properties:
                  Result:
                    type: boolean
                  Message:
                    type: string
                example:
                  Result: true
                  Message: Otp validatiation Succeeded
      deprecated: false
      security: []
  /onboard/individual/password/reset:
    put:
      tags:
        - onboard
      description: Reset Password
      operationId: ResetPassword
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - password
              type: object
              properties:
                password:
                  type: string
              example:
                password: qwerty123
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - msg
                type: object
                properties:
                  msg:
                    type: string
                example:
                  msg: User password resetted successfully
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin, Individual'
  /onboard/individual/password/forgot:
    put:
      tags:
        - onboard
      description: Forgot Password
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
              type: object
              properties:
                username:
                  type: string
        required: true
      responses:
        '204':
          description: No Content
          content: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - Code
                  - Message
                type: object
                properties:
                  Code:
                    type: integer
                    format: int32
                  Message:
                    type: string
      deprecated: false
  /onboard/individual/logout:
    post:
      tags:
        - onboard
      description: Logs out a user from the system
      requestBody:
        content:
          application/json:
            schema:
              required:
                - clientid
                - refreshtoken
              type: object
              properties:
                clientid:
                  type: string
                refreshtoken:
                  type: string
        required: true
      responses:
        '204':
          description: No Content
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin, Individual'
  /onboard/individual/token:
    post:
      tags:
        - onboard
      description: Refresh access token
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - refreshtoken
                - clientid
              type: object
              properties:
                refreshtoken:
                  type: string
                clientid:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - access_token
                  - expires_in
                  - refresh_expires_in
                  - refresh_token
                  - token_type
                type: object
                properties:
                  access_token:
                    type: string
                  expires_in:
                    type: integer
                    format: int32
                  refresh_expires_in:
                    type: integer
                    format: int32
                  refresh_token:
                    type: string
                  token_type:
                    type: string
      deprecated: false
      security: []
  /onboard/organisation:
    get:
      tags:
        - onboard
      description: Get organization by ID
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin, Individual'
    patch:
      tags:
        - onboard
      description: Update organization
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - location
                - description
                - policyurl
              type: object
              properties:
                name:
                  type: string
                location:
                  type: string
                description:
                  type: string
                policyurl:
                  type: string
        required: true
      responses:
        '202':
          description: Accepted
          content: {}
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
  /onboard/organisation/coverimage:
    post:
      tags:
        - onboard
      description: Update organization cover image
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              required:
                - orgimage
              type: object
              properties:
                orgimage:
                  type: string
                  format: binary
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
  /onboard/organisation/logoimage:
    post:
      tags:
        - onboard
      description: Update organization logo image
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              required:
                - orgimage
              type: object
              properties:
                orgimage:
                  type: string
                  format: binary
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - Organization
                type: object
                properties:
                  Organization:
                    $ref: '#/components/schemas/Organisation'
      deprecated: false
      security:
        - BearerAuth: []
      x-badges:
        - color: primary-color
          label: 'Authorised roles: Organisation admin'
components:
  schemas:
    Log:
      type: object
      properties:
        logs:
          description: 'Log object captures an event occured in the system. For e.g. Organisation admin logs, webhook event logs e.t.c'
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Log ID
              type:
                type: integer
                description: Type integer
              type_str:
                type: string
                description: 'Type string for a log. for .e.g. webhooks, organisation_admin e.t.c'
              individual_id:
                type: string
                description: User ID
              username:
                type: string
                description: Username of the individual if available.
              timestamp:
                type: string
                description: UTC timestamp in seconds since epoch
              log:
                type: string
                description: Log description
        pagination:
          description: Pagination object
          $ref: '#/components/schemas/Pagination'
    Pagination:
      description: Pagination
      type: object
      properties:
        current_page:
          type: integer
          description: Current page number
        total_items:
          type: integer
          description: Total number of items available
        total_pages:
          type: integer
          description: Total number of pages based on limit
        limit:
          type: integer
          description: Number of items per page
        has_previous:
          type: boolean
          description: Indicates if there's a previous page
        has_next:
          type: boolean
          description: Indicates if there's a next page
    Error:
      type: object
      description: A generic error object
      properties:
        code:
          type: integer
        message:
          type: string
    GetUserConsentHistory:
      required:
        - ConsentHistory
        - Links
      type: object
      properties:
        ConsentHistory:
          type: array
          items:
            $ref: '#/components/schemas/ConsentHistory'
          description: List of consent history
        Links:
          $ref: '#/components/schemas/Pagination'
          description: Pagination links
    ConsentHistory:
      required:
        - ID
        - OrgID
        - PurposeID
        - Log
        - TimeStamp
      type: object
      properties:
        ID:
          type: string
          description: Consent history ID
        OrgID:
          type: string
          description: Organisation ID
        PurposeID:
          type: string
          description: Consent agreement ID
        Log:
          type: string
          description: Log string
        TimeStamp:
          type: string
          description: Timestamp in ISO 8601 date time format
      example:
        ID: 64e91591e2f6a8000142c665
        OrgID: 603e683c69dd720001c74f93
        PurposeID: 61e183127c81650001f97d43
        Log: Updated consent value to <Allow> for the purpose <Customer Loyalty Card Issuance> in organization <The Retail Company (Germany)>
        TimeStamp: '2023-08-25T20:56:49Z'
    GetConsentsByConsentAgreementId:
      required:
        - ID
        - ConsentID
        - OrgID
        - UserID
        - Consents
        - DataRetention
      type: object
      properties:
        ID:
          type: string
        ConsentID:
          type: string
        OrgID:
          type: string
        UserID:
          type: string
        DataRetention:
          required:
            - Expiry
          type: object
          properties:
            Expiry:
              type: string
        Consents:
          required:
            - DataAgreement
            - Count
            - Consents
          type: object
          properties:
            DataAgreement:
              $ref: '#/components/schemas/DataAgreement'
            Count:
              required:
                - Total
                - Consented
              type: object
              properties:
                Total:
                  type: integer
                  format: int32
                Consented:
                  type: integer
                  format: int32
            Consents:
              type: array
              items:
                required:
                  - ID
                  - Description
                  - Value
                  - Status
                type: object
                properties:
                  ID:
                    description: Identifier for the consent
                    type: string
                  Description:
                    description: Description of the data attribute
                    type: string
                  Value:
                    description: Name of the data attribute
                    type: string
                  Status:
                    required:
                      - Consented
                      - TimeStamp
                      - Days
                      - Remaining
                    type: object
                    properties:
                      Consented:
                        type: string
                        enum:
                          - Allow
                          - Disallow
                        description: Status of the consent for e.g. Allow/Disallow
                      TimeStamp:
                        type: string
                        description: UTC timestamp of when the consent was recorded
                      Days:
                        type: integer
                        format: int32
                        description: No of days the consent should be remembered for.
                      Remaining:
                        type: integer
                        format: int32
                        description: No of days the consent will expire in.
    GetConsentsForAllConsentAgreements:
      required:
        - ID
        - OrgID
        - UserID
        - ConsentsAndPurposes
      type: object
      properties:
        ID:
          type: string
        OrgID:
          type: string
        UserID:
          type: string
        ConsentsAndPurposes:
          type: array
          items:
            required:
              - DataAgreement
              - Count
              - Consents
            type: object
            properties:
              DataAgreement:
                $ref: '#/components/schemas/DataAgreement'
              Count:
                $ref: '#/components/schemas/GetConsentsByConsentAgreementId/properties/Consents/properties/Count'
              Consents:
                type: array
                items:
                  $ref: '#/components/schemas/GetConsentsByConsentAgreementId/properties/Consents/properties/Consents/items'
    GetConsents:
      required:
        - ID
        - OrgID
        - UserID
        - ConsentsAndPurposes
      type: object
      properties:
        ID:
          type: string
        OrgID:
          type: string
        UserID:
          type: string
        ConsentsAndPurposes:
          type: array
          items:
            required:
              - DataAgreement
              - Count
              - Consents
              - DataRetention
            type: object
            properties:
              DataAgreement:
                $ref: '#/components/schemas/DataAgreement'
              Count:
                $ref: '#/components/schemas/GetConsentsByConsentAgreementId/properties/Consents/properties/Count'
              Consents:
                type: array
                items:
                  $ref: '#/components/schemas/GetConsentsByConsentAgreementId/properties/Consents/properties/Consents/items'
              DataRetention:
                required:
                  - Expiry
                type: object
                properties:
                  Expiry:
                    type: string
    UpdateDataAgreementRecord:
      required:
        - consented
      type: object
      properties:
        consented:
          type: string
          enum:
            - Allow
            - DisAllow
      example:
        consented: Allow
    DataAgreementRecords:
      required:
        - ID
        - OrgID
        - UserID
        - ConsentsAndPurposes
      type: object
      description: A list of data agreement records
      properties:
        ID:
          type: string
          description: Consent identifier
        OrgID:
          type: string
          description: Organisation identifier
        UserID:
          type: string
          description: User identifier
        ConsentsAndPurposes:
          type: array
          items:
            $ref: '#/components/schemas/DataAgreementRecord'
    DataAgreementRecord:
      required:
        - data_agreement
        - data_agreement_revision
        - individual
        - opt_in
      type: object
      description: |
        A Consent Record expresses consent (as defined in this building block's specification) to a single Agreement. 
        There must be a UNIQUE constraint on (agreement_revision, individual)
      properties:
        id:
          type: string
          format: uuid
          example: f47ac10b-58cc-4372-a567-0e02b2c3d479
          description: |
            Objects may be passed back by some API endpoints without an id (PK), denoting that they are a \"draft\", 
            i.e. a ConsentRecord that is not yet stored in the database and only exist in transit. 
            Draft ConsentRecords do not have a Revision, but if paired up with a Signature, a valid Revision should be generated.
        data_agreement:
          description: Data agreement
          $ref: '#/components/schemas/DataAgreement'
        data_agreement_revision:
          description: Data agreement revision
          $ref: '#/paths/~1audit~1agreements/get/responses/200/content/application~1json/schema/properties/data_agreement_record/properties/data_agreement_revision/properties/successor'
        individual:
          description: Individual to whom this data agreement record belongs to
          $ref: '#/components/schemas/Individual'
        opt_in:
          type: boolean
          description: 'True: The individual has positively opted in. False: The individual has explicitly said no (or withdrawn a previous consent).'
        state:
          type: string
          description: 'The state field is used to record state changes after-the-fact. It is maintained by the Consent BB itself. Valid states: unsigned/pending more signatures/signed'
        signature:
          $ref: '#/components/schemas/Signature'
    DataAgreementRecordRevision:
      type: object
      description: |
        A generic revision model captures the serialized contents of any schema's single row.  This is then subject to 1) cryptographic signature and 2) auditing. Aside from successor column,  a revision should be considered locked.
      required:
        - id
        - schema_name
        - object_id
        - serialized_snapshot
        - timestamp
      properties:
        id:
          type: string
          description: Revision identifier
        object_id:
          type: string
          description: Consent identifier
        serialized_snapshot:
          type: string
          description: Snapshot of the revision
        timestamp:
          type: string
          description: UTC timestamp of when the revision was created
        authorized_by_individual:
          $ref: '#/components/schemas/Individual'
          description: Reference to the individual that consented
        authorized_by_other:
          $ref: '#/components/schemas/Individual'
          description: Reference to an admin user that has created this revision
        successor:
          $ref: '#/components/schemas/DataAgreementRecordRevision'
        predecessor_hash:
          type: string
          description: Tamper-resistent artifact from previous record
        predecessor_signature:
          $ref: '#/components/schemas/Signature'
          description: Tamper-resistent artifact from previous record (we don't know if the previous record was signed or not)
    UpdateConsentForDataAttributeRequest:
      required:
        - consented
        - days
      type: object
      properties:
        consented:
          type: string
        days:
          type: integer
          format: int32
      example:
        consented: Allow
        days: 0
    UpdateConsentForDataAttributeResponse:
      required:
        - Msg
        - Status
      type: object
      properties:
        Msg:
          type: string
        Status:
          type: integer
          format: int32
      example:
        Msg: Consent updated successfully
        Status: 200
    ListAllDataRequests:
      required:
        - DataRequests
        - IsRequestsOngoing
        - IsDataDeleteRequestOngoing
        - IsDataDownloadRequestOngoing
        - Links
      type: object
      properties:
        DataRequests:
          type: array
          items:
            required:
              - ID
              - UserID
              - UserName
              - OrgID
              - Type
              - TypeStr
              - State
              - RequestedDate
              - ClosedDate
              - StateStr
              - Comment
            type: object
            properties:
              ID:
                type: string
              UserID:
                type: string
              UserName:
                type: string
              OrgID:
                type: string
              Type:
                type: integer
                format: int32
              TypeStr:
                type: string
              State:
                type: integer
                format: int32
              RequestedDate:
                type: string
              ClosedDate:
                type: string
              StateStr:
                type: string
              Comment:
                type: string
            example:
              ID: 64eb3999e2f6a8000142c666
              UserID: 638de3302f5d1700014431f3
              UserName: johndoe@yopmail.com
              OrgID: 603e683c69dd720001c74f93
              Type: 1
              TypeStr: Delete Data
              State: 7
              RequestedDate: '2023-08-27 11:55:05 +0000 UTC'
              ClosedDate: '2023-08-27 11:56:45.307 +0000 UTC'
              StateStr: Request processed with action
              Comment: ''
        IsRequestsOngoing:
          type: boolean
        IsDataDeleteRequestOngoing:
          type: boolean
        IsDataDownloadRequestOngoing:
          type: boolean
        Links:
          $ref: '#/components/schemas/Pagination'
    GetAllDeleteMyDataRequests:
      required:
        - ID
        - UserID
        - UserName
        - OrgID
        - Type
        - TypeStr
        - State
        - RequestedDate
        - ClosedDate
        - StateStr
        - Comment
      type: object
      properties:
        ID:
          type: string
        UserID:
          type: string
        UserName:
          type: string
        OrgID:
          type: string
        Type:
          type: integer
          format: int32
        TypeStr:
          type: string
        State:
          type: integer
          format: int32
        RequestedDate:
          type: string
        ClosedDate:
          type: string
        StateStr:
          type: string
        Comment:
          type: string
      example:
        ID: 64eb3999e2f6a8000142c666
        UserID: 638de3302f5d1700014431f3
        UserName: johndoe@yopmail.com
        OrgID: 603e683c69dd720001c74f93
        Type: 1
        TypeStr: Delete Data
        State: 7
        RequestedDate: '2023-08-27 11:55:05 +0000 UTC'
        ClosedDate: '2023-08-27 11:56:45.307 +0000 UTC'
        StateStr: Request processed with action
        Comment: ''
    GetDeleteMyDataRequestStatus:
      required:
        - RequestOngoing
        - ID
        - State
        - StateStr
        - RequestedDate
      type: object
      properties:
        RequestOngoing:
          type: boolean
        ID:
          type: string
        State:
          type: integer
          format: int32
        StateStr:
          type: string
        RequestedDate:
          type: string
      example:
        RequestOngoing: true
        ID: 64eba692e2f6a8000142c668
        State: 1
        StateStr: Request initiated
        RequestedDate: '2023-08-27 19:40:02 +0000 UTC'
    CancelDeleteMyDataRequest:
      required:
        - ID
        - UserID
        - UserName
        - OrgID
        - Type
        - TypeStr
        - State
        - RequestedDate
        - ClosedDate
        - StateStr
        - Comment
      type: object
      properties:
        ID:
          type: string
        UserID:
          type: string
        UserName:
          type: string
        OrgID:
          type: string
        Type:
          type: integer
          format: int32
        TypeStr:
          type: string
        State:
          type: integer
          format: int32
        RequestedDate:
          type: string
        ClosedDate:
          type: string
        StateStr:
          type: string
        Comment:
          type: string
      example:
        ID: 64eba692e2f6a8000142c668
        UserID: 638de3302f5d1700014431f3
        UserName: johndoe@yopmail.com
        OrgID: 603e683c69dd720001c74f93
        Type: 1
        TypeStr: Delete Data
        State: 8
        RequestedDate: '2023-08-27 19:40:02 +0000 UTC'
        ClosedDate: '0001-01-01 00:00:00 +0000 UTC'
        StateStr: Request cancelled by user
        Comment: ''
    SendDownloadMyDataRequestError:
      required:
        - Code
        - Message
      type: object
      properties:
        Code:
          type: integer
          format: int32
        Message:
          type: string
      example:
        Code: 400
        Message: 'Request (Download Data) ongoing for user: 638de3302f5d1700014431f3 organization: 603e683c69dd720001c74f93'
    GetAllDownloadMyDataRequests:
      required:
        - ID
        - UserID
        - UserName
        - OrgID
        - Type
        - TypeStr
        - State
        - RequestedDate
        - ClosedDate
        - StateStr
        - Comment
      type: object
      properties:
        ID:
          type: string
        UserID:
          type: string
        UserName:
          type: string
        OrgID:
          type: string
        Type:
          type: integer
          format: int32
        TypeStr:
          type: string
        State:
          type: integer
          format: int32
        RequestedDate:
          type: string
        ClosedDate:
          type: string
        StateStr:
          type: string
        Comment:
          type: string
      example:
        ID: 64ebb1a7e2f6a8000142c669
        UserID: 638de3302f5d1700014431f3
        UserName: johndoe@yopmail.com
        OrgID: 603e683c69dd720001c74f93
        Type: 2
        TypeStr: Download Data
        State: 1
        RequestedDate: '2023-08-27 20:27:19 +0000 UTC'
        ClosedDate: '0001-01-01 00:00:00 +0000 UTC'
        StateStr: Request initiated
        Comment: ''
    GetDownloadMyDataRequestStatus:
      required:
        - RequestOngoing
        - ID
        - State
        - StateStr
        - RequestedDate
      type: object
      properties:
        RequestOngoing:
          type: boolean
        ID:
          type: string
        State:
          type: integer
          format: int32
        StateStr:
          type: string
        RequestedDate:
          type: string
      example:
        RequestOngoing: true
        ID: 64ebb1a7e2f6a8000142c669
        State: 1
        StateStr: Request initiated
        RequestedDate: '2023-08-27 20:27:19 +0000 UTC'
    CancelDownloadMyDataRequest:
      required:
        - ID
        - UserID
        - UserName
        - OrgID
        - Type
        - TypeStr
        - State
        - RequestedDate
        - ClosedDate
        - StateStr
        - Comment
      type: object
      properties:
        ID:
          type: string
        UserID:
          type: string
        UserName:
          type: string
        OrgID:
          type: string
        Type:
          type: integer
          format: int32
        TypeStr:
          type: string
        State:
          type: integer
          format: int32
        RequestedDate:
          type: string
        ClosedDate:
          type: string
        StateStr:
          type: string
        Comment:
          type: string
      example:
        ID: 64ebb1a7e2f6a8000142c669
        UserID: 638de3302f5d1700014431f3
        UserName: johndoe@yopmail.com
        OrgID: 603e683c69dd720001c74f93
        Type: 2
        TypeStr: Download Data
        State: 8
        RequestedDate: '2023-08-27 20:27:19 +0000 UTC'
        ClosedDate: '0001-01-01 00:00:00 +0000 UTC'
        StateStr: Request cancelled by user
        Comment: ''
    Individual:
      required:
        - id
        - iamId
        - orgs
        - APIKey
        - Roles
        - IncompleteProfile
      type: object
      description: |
        Shallowly models an Individual which may reference some instance in an external system (registration system, functional ID, foundational ID etc). 
        An Individual instance of this model is not to be mistaken with a unique natural individual. 
        It is up to the system owner to decide if this record permits mapping to a natural individual and/or if a single Individual row can map to several consent agreements.
      properties:
        id:
          type: string
        name:
          type: string
          description: Name of the individual
        iamId:
          type: string
          description: Consent BB specific IAM ID
        external_id:
          type: string
          format: ''
          example: ''
          description: 'Reference to another foundational/functional ID, which is likely PII'
        external_id_type:
          type: string
          format: ''
          example: ''
          description: External id type specifier. A string. For instance "email" or "foundational id". Can be used in later queries.
        lastVisit:
          type: string
          description: Last logged-in time
        orgs:
          type: array
          items:
            type: string
            description: Organisation ID
        roles:
          type: array
          items:
            type: string
            description: Role ID and organisation ID
        incompleteProfile:
          type: boolean
          description: Indicates whether the profile is incomplete or not
    Organisation:
      required:
        - ID
        - Name
        - CoverImageID
        - CoverImageURL
        - LogoImageID
        - LogoImageURL
        - Location
        - Type
        - Jurisdiction
        - Disclosure
        - Restriction
        - Shared3PP
        - Description
        - Enabled
        - PolicyURL
        - EulaURL
        - Templates
        - Purposes
        - Admins
        - BillingInfo
        - Subs
        - HlcSupport
        - PrivacyDashboard
        - AriesCloudAgentDeployment
        - DataRetention
        - IdentityProviderRepresentation
        - KeycloakOpenIDClient
        - ExternalIdentityProviderAvailable
      type: object
      properties:
        ID:
          type: string
        Name:
          type: string
        CoverImageID:
          type: string
        CoverImageURL:
          type: string
        LogoImageID:
          type: string
        LogoImageURL:
          type: string
        Location:
          type: string
        Type:
          required:
            - ID
            - Type
            - ImageID
            - ImageURL
          type: object
          properties:
            ID:
              type: string
            Type:
              type: string
            ImageID:
              type: string
            ImageURL:
              type: string
        Jurisdiction:
          type: string
        Disclosure:
          type: string
        Restriction:
          type: string
        Shared3PP:
          type: boolean
        Description:
          type: string
        Enabled:
          type: boolean
        PolicyURL:
          type: string
        EulaURL:
          type: string
        Templates:
          type: array
          items:
            $ref: '#/components/schemas/DataAttribute'
        Purposes:
          type: array
          items:
            $ref: '#/components/schemas/DataAgreement'
        Admins:
          type: array
          items:
            required:
              - UserID
              - RoleID
            type: object
            properties:
              UserID:
                type: string
              RoleID:
                type: integer
                format: int32
        Subs:
          required:
            - Method
            - Key
          type: object
          properties:
            Method:
              type: integer
              format: int32
            Key:
              type: string
        HlcSupport:
          type: boolean
        PrivacyDashboard:
          required:
            - HostName
            - Version
          type: object
          properties:
            HostName:
              type: string
            Version:
              type: string
        DataRetention:
          required:
            - RetentionPeriod
            - Enabled
          type: object
          properties:
            RetentionPeriod:
              type: integer
              format: int32
            Enabled:
              type: boolean
          example:
            RetentionPeriod: 0
            Enabled: false
        IdentityProviderRepresentation:
          required:
            - providerId
            - onboard
            - alias
            - storeToken
            - addReadTokenRoleOnCreate
            - enabled
            - firstBrokerLoginFlowAlias
            - linkOnly
            - postBrokerLoginFlowAlias
            - trustEmail
            - authenticateByDefault
          type: object
          properties:
            providerId:
              type: string
            config:
              required:
                - authorizationUrl
                - tokenUrl
                - logoutUrl
                - clientAuthMethod
                - syncMode
                - clientId
                - clientSecret
                - jwksUrl
                - userInfoUrl
                - defaultScope
                - validateSignature
                - backchannelSupported
                - disableUserInfo
                - hideOnLoginPage
                - issuer
                - useJwksUrl
              type: object
              properties:
                authorizationUrl:
                  type: string
                tokenUrl:
                  type: string
                logoutUrl:
                  type: string
                clientAuthMethod:
                  type: string
                syncMode:
                  type: string
                clientId:
                  type: string
                clientSecret:
                  type: string
                jwksUrl:
                  type: string
                userInfoUrl:
                  type: string
                defaultScope:
                  type: string
                validateSignature:
                  type: boolean
                backchannelSupported:
                  type: boolean
                disableUserInfo:
                  type: boolean
                hideOnLoginPage:
                  type: boolean
                issuer:
                  type: string
                useJwksUrl:
                  type: boolean
              example:
                authorizationUrl: ''
                tokenUrl: ''
                logoutUrl: ''
                clientAuthMethod: ''
                syncMode: ''
                clientId: ''
                clientSecret: ''
                jwksUrl: ''
                userInfoUrl: ''
                defaultScope: ''
                validateSignature: false
                backchannelSupported: false
                disableUserInfo: false
                hideOnLoginPage: false
                issuer: ''
                useJwksUrl: false
            alias:
              type: string
            storeToken:
              type: boolean
            addReadTokenRoleOnCreate:
              type: boolean
            enabled:
              type: boolean
            firstBrokerLoginFlowAlias:
              type: string
            linkOnly:
              type: boolean
            postBrokerLoginFlowAlias:
              type: string
            trustEmail:
              type: boolean
            authenticateByDefault:
              type: boolean
          example:
            providerId: ''
            config:
              authorizationUrl: ''
              tokenUrl: ''
              logoutUrl: ''
              clientAuthMethod: ''
              syncMode: ''
              clientId: ''
              clientSecret: ''
              jwksUrl: ''
              userInfoUrl: ''
              defaultScope: ''
              validateSignature: false
              backchannelSupported: false
              disableUserInfo: false
              hideOnLoginPage: false
              issuer: ''
              useJwksUrl: false
            alias: ''
            storeToken: false
            addReadTokenRoleOnCreate: false
            enabled: false
            firstBrokerLoginFlowAlias: ''
            linkOnly: false
            postBrokerLoginFlowAlias: ''
            trustEmail: false
            authenticateByDefault: false
        KeycloakOpenIDClient:
          required:
            - clientId
            - surrogateAuthRequired
            - enabled
            - alwaysDisplayInConsole
            - clientAuthenticatorType
            - redirectUris
            - webOrigins
            - notBefore
            - bearerOnly
            - consentRequired
            - standardFlowEnabled
            - implicitFlowEnabled
            - directAccessGrantsEnabled
            - serviceAccountsEnabled
            - publicClient
            - frontchannelLogout
            - protocol
            - attributes
            - authenticationFlowBindingOverrides
            - fullScopeAllowed
            - nodeReRegistrationTimeout
            - defaultClientScopes
            - optionalClientScopes
            - access
          type: object
          properties:
            clientId:
              type: string
            surrogateAuthRequired:
              type: boolean
            enabled:
              type: boolean
            alwaysDisplayInConsole:
              type: boolean
            clientAuthenticatorType:
              type: string
            redirectUris:
              type: string
              nullable: true
            webOrigins:
              type: string
              nullable: true
            notBefore:
              type: integer
              format: int32
            bearerOnly:
              type: boolean
            consentRequired:
              type: boolean
            standardFlowEnabled:
              type: boolean
            implicitFlowEnabled:
              type: boolean
            directAccessGrantsEnabled:
              type: boolean
            serviceAccountsEnabled:
              type: boolean
            publicClient:
              type: boolean
            frontchannelLogout:
              type: boolean
            protocol:
              type: string
            attributes:
              required:
                - saml.assertion.signature
                - saml.force.post.binding
                - saml.multivalued.roles
                - saml.encrypt
                - backchannel.logout.revoke.offline.tokens
                - saml.server.signature
                - saml.server.signature.keyinfo.ext
                - exclude.session.state.from.auth.response
                - backchannel.logout.session.required
                - backchannel.logout.url
                - client_credentials.use_refresh_token
                - saml_force_name_id_format
                - saml.client.signature
                - tls.client.certificate.bound.access.tokens
                - saml.authnstatement
                - display.on.consent.screen
                - saml.onetimeuse.condition
              type: object
              properties:
                saml.assertion.signature:
                  type: string
                saml.force.post.binding:
                  type: string
                saml.multivalued.roles:
                  type: string
                saml.encrypt:
                  type: string
                backchannel.logout.revoke.offline.tokens:
                  type: string
                saml.server.signature:
                  type: string
                saml.server.signature.keyinfo.ext:
                  type: string
                exclude.session.state.from.auth.response:
                  type: string
                backchannel.logout.session.required:
                  type: string
                backchannel.logout.url:
                  type: string
                client_credentials.use_refresh_token:
                  type: string
                saml_force_name_id_format:
                  type: string
                saml.client.signature:
                  type: string
                tls.client.certificate.bound.access.tokens:
                  type: string
                saml.authnstatement:
                  type: string
                display.on.consent.screen:
                  type: string
                saml.onetimeuse.condition:
                  type: string
            authenticationFlowBindingOverrides:
              required:
                - direct_grant
                - browser
              type: object
              properties:
                direct_grant:
                  type: string
                browser:
                  type: string
            fullScopeAllowed:
              type: boolean
            nodeReRegistrationTimeout:
              type: integer
              format: int32
            defaultClientScopes:
              type: string
              nullable: true
            optionalClientScopes:
              type: string
              nullable: true
            access:
              required:
                - view
                - configure
                - manage
              type: object
              properties:
                view:
                  type: boolean
                configure:
                  type: boolean
                manage:
                  type: boolean
        ExternalIdentityProviderAvailable:
          type: boolean
    DataAttribute:
      title: Data Attribute
      description: Data attributes exposed for data exchange by the organisation
      type: object
      properties:
        attributeId:
          description: Identifier for the attribute.
          type: string
        attributeName:
          description: Name of the attribute
          type: string
        attributeSensitive:
          description: |
            Indicates that personal data is sensitive or belongs to a  special category as per a regulations, typically requiring additional measures of handling.
          type: boolean
        attributeCategory:
          description: A category of personal data
          type: string
        attributeDescription:
          description: Description for the attribute
          type: string
        dataAgreementIds:
          description: Identifiers for the associated data agreements
          type: array
          items:
            type: string
      required:
        - attributeId
        - attributeName
        - attributeSensitive
        - attributeCategory
        - attributeDescription
    DataRequest:
      required:
        - ID
        - UserID
        - UserName
        - OrgID
        - Type
        - TypeStr
        - State
        - RequestedDate
        - ClosedDate
        - StateStr
        - Comment
      type: object
      properties:
        ID:
          type: string
        UserID:
          type: string
        UserName:
          type: string
        OrgID:
          type: string
        Type:
          type: integer
          format: int32
        TypeStr:
          type: string
        State:
          type: integer
          format: int32
        RequestedDate:
          type: string
        ClosedDate:
          type: string
        StateStr:
          type: string
        Comment:
          type: string
      example:
        ID: 64ee6e86e2f6a8000142c68f
        UserID: 638de3302f5d1700014431f3
        UserName: george@igrant.io
        OrgID: 64ec561de2f6a8000142c671
        Type: 2
        TypeStr: Download Data
        State: 1
        RequestedDate: '2023-08-29 22:17:42 +0000 UTC'
        ClosedDate: '0001-01-01 00:00:00 +0000 UTC'
        StateStr: Request initiated
        Comment: ''
    DataAgreement:
      title: Data agreement
      type: object
      description: |
        A data agreement contains the specification of a single purpose that can be consented to. 
        A data greement is universal and can be consented to by *many* individuals through a data agreement record.
      required:
        - id
        - version
        - lawful_basis
        - dpia
      properties:
        id:
          type: string
          description: Data agreement identifier
        version:
          type: string
          description: The version of this specification to which a data agreement conforms
        data_controller:
          description: Data source organisation details
          type: object
          required:
            - id
            - name
            - url
          properties:
            id:
              type: string
              format: ''
              example: ''
              description: ''
            name:
              type: string
              description: Name of data controller (may be omitted if no data involved)
            url:
              type: string
              description: URL of data controller (may be omitted if no data involved)
        data_policy:
          description: Global policy configuration
          type: object
          required:
            - id
            - name
            - version
            - url
          properties:
            id:
              type: string
              format: ''
              example: ''
              description: Policy ID
            name:
              type: string
              format: ''
              example: ''
              description: Name of the policy
            version:
              type: string
              format: ''
              example: ''
              description: Version of the policy
            url:
              type: string
              format: ''
              example: ''
              description: 'Permanent URL at which this very version of the Policy can be read, should not be allowed to change over time.'
            jurisdiction:
              type: string
              format: ''
              example: ''
              description: 'Indicates a legal jurisdiction, e.g. of some legislation, or where some government service is based.'
            industry_sector:
              type: string
              format: ''
              example: ''
              description: Indicate or restrict scope for interpretation and application of purpose in a domain.
            data_retention_period_days:
              type: integer
              format: ''
              example: ''
              description: 'The amount of time that an organization holds onto any personal data, in days.'
            geographic_restriction:
              type: string
              format: ''
              example: ''
              description: The geographic restrictions required or followed regarding storage of data.
            storage_location:
              type: string
              format: ''
              example: ''
              description: The geographic location where the personal data is stored
        purpose:
          description: Purpose of an agreement
          type: object
          required:
            - id
            - name
            - description
          properties:
            id:
              type: string
              format: ''
              example: ''
              description: ''
            name:
              type: string
              format: ''
              example: ''
              description: Name of purpose
            description:
              type: string
              format: ''
              example: ''
              description: Description of purpose
            hash:
              type: string
              format: ''
              example: ''
              description: 'In order to sign an Agreement, this relation needs to have a cryptopgraphic hash to be included in the Signature of the Agreement.'
        lawful_basis:
          type: string
          description: Lawful basis of the data agreement
          enum:
            - consent
            - legal_obligation
            - contract
            - vital_interest
            - public_task
            - legitimate_interest
        method_of_use:
          type: string
          description: |
            Method of use indicates the data exchange mode of data agreement. 
            When the data controller wishes to expose the data for consumption it should be data-source.
            When the data controller wishes to consume the data it should be data-using-service
          num:
            - null
            - data-source
            - data-using-service
        dpia:
          description: Data Protection Impact Assessment
          title: Data agreement
          type: object
          required:
            - dpia_timestamp
            - dpia_summary_url
          properties:
            dpia_timestamp:
              type: string
              description: UTC timestamp in epoch seconds when the DPIA was performed
            dpia_summary_url:
              type: string
              description: URL to the DPIA summary
        lifecycle:
          type: object
          description: 'TBD: Models the valid lifecycle states of an Agreement'
          required:
            - id
            - name
          properties:
            id:
              type: string
              description: Data agreement lifecycle ID
            name:
              type: string
              description: Definition / Preparation / Capture / Proof
              enum:
                - definition
                - preparation
                - capture
                - proof
        signature:
          $ref: '#/components/schemas/Signature'
        active:
          type: boolean
          description: Agreement is active and new ConsentRecords can be created.
        forgettable:
          type: boolean
          description: 'Consent Record may be deleted when consent is withdrawn, as its existence is not necessary for auditability.'
    GlobalDataPolicyConfiguration:
      type: object
      description: Global data policy configuration for the organisation
      properties:
        policyUrl:
          description: Policy URL for the organisation
          type: string
        jurisdiction:
          description: |
            Indicates a legal jurisdiction, e.g. of some legislation, or where some government service is based.
          type: string
        industrySectorId:
          description: |
            Identifier for the industry sector
          type: string
        industrySector:
          description: |
            Indicate or restrict scope for interpretation and application of purpose in a domain.
          type: string
        dataRetentionPeriod:
          description: 'The amount of time that an organization holds onto any personal data, in seconds.'
          type: number
        geographicRestriction:
          description: The geographic restrictions required or followed regarding storage of data.
          type: string
        storageLocation:
          description: The geographic location where the personal data is stored
          type: string
        thirdPartyDataSharing:
          description: |
            This is a boolean value to indicate that the DA is used for third party data disclosures.  This indicates that some data disclosures will happen and is used to release personal data  to DUS based on an agreement
          type: boolean
      required:
        - policyUrl
        - jurisdiction
        - industrySectorId
        - industrySector
        - dataRetentionPeriod
        - geographicRestriction
        - storageLocation
        - thirdPartyDataSharing
    Signature:
      type: object
      description: |
        A generic signature contains a cryptographic hash of some value, together with a signature created by some private key in another system. 
        Required signing methods: Revision object or another Signature object.
      required:
        - id
        - payload
        - signature
        - verification_method
        - verification_hash
        - verification_signed_by
        - timestamp
      properties:
        id:
          type: string
          format: uuid
          description: 'Objects may be passed back by some API endpoints without an id (PK), denoting that they are a "draft", i.e. a Signature that is not yet stored in the database and only exist in transit.'
        payload:
          type: string
          format: ''
          example: ''
          description: 'The payload that is signed, constructed as a serialization of fields verification_method + verification_hash + verification_artifact + verification_signed_by + verification_jws_header. Serialized as a JSON dict.'
        signature:
          type: string
          format: ''
          example: ''
          description: 'Signature (of payload), the format of the signature should be specified by either verification_method or verification_jws_header'
        verification_method:
          type: string
          format: ''
          example: ''
          description: 'A well-known string denoting which method is used. Valid values: <TBD>. We might expand this with a relation to which verification methods that are supported. There may be a minimal set of supported methods necessary.'
        verification_hash:
          type: string
          format: ''
          example: ''
          description: Internally generated cryptographic hash of the value to be signed. The hash is (re)produced from the object_type and object_reference - but from the serialized data of those.
        verification_artifact:
          type: string
          format: ''
          example: ''
          description: 'A verification artifact in the form of a scanned object, image, signature etc.'
        verification_signed_by:
          type: string
          format: ''
          example: ''
          description: 'Because an identifier''s information may change over time, there is a need to store that information at the time of signing. In case of a cryptographic signature, this field should contain some identifier for looking up or verifying the public key of the signing party. In case of a non-cryptographic signature, this field could contain a natural individual''s names, personal number, email addresses - store a snapshot that binds to the signature at the time of signing. In case of a cryptographic signature, this may be the fingerprint of the individual''s public key or in some cases, a token from the user''s ID session.'
        verification_jws_header:
          type: string
          format: ''
          example: ''
          description: 'Alternative to the verification_method, verification_hash and verification_signature, give a JWS serialized object (RFC7515)'
        timestamp:
          type: string
          format: ''
          example: ''
          description: 'Timestamp of signature, currently this field isn''t part of the payload so it''s not tamper-proof.'
        object_type:
          type: string
          format: ''
          example: ''
          description: 'Name of the schema model that object_reference points to. Values: "signature" or "revision"'
        object_reference:
          type: string
          format: ''
          example: ''
          description: 'A symmetric relation / back reference to the object_type that was signed. We are currently just modelling signing another signature (a chain) or signing a Revision (which can be a revision of a consent record, an agreement, policy etc)'
  securitySchemes:
    BearerAuth:
      description: Access token passed with Bearer prefix in Authorization header
      type: http
      scheme: bearer
      bearerFormat: JWT
