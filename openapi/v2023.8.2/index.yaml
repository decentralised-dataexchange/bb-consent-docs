components:
  schemas:
    Agreement:
      $ref: ./definitions/Agreement.yaml
    AgreementData:
      $ref: ./definitions/AgreementData.yaml
    AgreementFilter:
      $ref: ./definitions/AgreementFilter.yaml
    AgreementLifecycle:
      $ref: ./definitions/AgreementLifecycle.yaml
    AgreementPurpose:
      $ref: ./definitions/AgreementPurpose.yaml
    AuditEventType:
      $ref: ./definitions/AuditEventType.yaml
    AuditTracker:
      $ref: ./definitions/AuditTracker.yaml
    ConsentRecord:
      $ref: ./definitions/ConsentRecord.yaml
    ConsentRecordFilter:
      $ref: ./definitions/ConsentRecordFilter.yaml
    Controller:
      $ref: ./definitions/Controller.yaml
    Individual:
      $ref: ./definitions/Individual.yaml
    IndividualFilter:
      $ref: ./definitions/IndividualFilter.yaml
    Policy:
      $ref: ./definitions/Policy.yaml
    Revision:
      $ref: ./definitions/Revision.yaml
    Signature:
      $ref: ./definitions/Signature.yaml
    StatusReadiness:
      $ref: ./definitions/StatusReadiness.yaml
    StatusStartup:
      $ref: ./definitions/StatusStartup.yaml
  securitySchemes:
    BearerAuth:
      description: Access token passed with Bearer prefix in Authorization header
      type: http
      scheme: bearer
      bearerFormat: JWT
info:
  contact:
    email: support@igrant.io
    name: iGrant.io
    url: https://igrant.io
  description:
    "The Consent Building Block enables services for individuals to approve
    the use  of their personal data by defining the principles, functions, and architecture  of
    an information system. For organisations that process personal data, it  provides
    the ability to know the individual's will and legitimately process such  personal
    data. The Consent Building Block is a process-oriented GovStack Building Block  facilitating
    auditable bilateral data-agreements within a multi-agent environment that  integrates
    with most other Building Blocks."
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: Consent Building Block APIs
  version: 2023.8.2
openapi: 3.1.0
paths:
  /audit/data-agreement/{dataAgreementId}:
    get:
      $ref: ./paths/auditReadRecord.yaml
  /audit/data-agreements/:
    post:
      $ref: ./paths/auditAgreementList.yaml
  /audit/data-agreement-record/{dataAgreementRecordId}:
    get:
      $ref: ./paths/auditConsentRecordRead.yaml
  /audit/data-agreement-records:
    post:
      $ref: ./paths/auditConsentRecordList.yaml
  /config/data-agreement:
    post:
      $ref: ./paths/configCreateAgreement.yaml
  /config/data-agreement/{dataAgreementId}:
    delete:
      $ref: ./paths/configDeleteAgreement.yaml
    get:
      $ref: ./paths/configReadAgreement.yaml
    put:
      $ref: ./paths/configUpdateAgreement.yaml
  /config/data-agreements:
    get:
      $ref: ./paths/configListAgreement.yaml
    post:
      $ref: ./paths/configListAgreementFilter.yaml
  /config/policies:
    get:
      $ref: ./paths/configListPolicy.yaml
  /config/policy:
    post:
      $ref: ./paths/configCreatePolicy.yaml
  /config/policy/{policyId}:
    delete:
      $ref: ./paths/configDeletePolicy.yaml
    get:
      $ref: ./paths/configReadPolicy.yaml
    put:
      $ref: ./paths/configUpdatePolicy.yaml
  /config/policy/{policyId}/revisions:
    get:
      $ref: ./paths/configListPolicyRevisions.yaml
  /service/data-agreement/{dataAgreementId}:
    get:
      $ref: ./paths/serviceAgreementRead.yaml
  /service/data-agreement/{dataAgreementId}/data-attributes:
    get:
      $ref: ./paths/serviceAgreementDataRead.yaml
  /service/individual:
    post:
      $ref: ./paths/serviceIndividualCreate.yaml
  /service/individual/record:
    delete:
      $ref: ./paths/serviceDeleteAllRecords.yaml
    get:
      $ref: ./paths/serviceListIndividualConsentRecordList.yaml
  /service/individual/record/data-agreement/{dataAgreementId}:
    get:
      $ref: ./paths/serviceReadIndividualRecordRead.yaml
    post:
      $ref: ./paths/serviceCreateIndividualConsentRecord.yaml
  /service/individual/record/data-agreement/{dataAgreementId}/all:
    get:
      $ref: ./paths/serviceListIndividualAgreementConsentRecordList.yaml
  /service/individual/record/data-agreement-record:
    post:
      $ref: ./paths/serviceCreateIndividualConsentRecordAndSignature.yaml
  /service/individual/record/data-agreement-record/draft:
    post:
      $ref: ./paths/serviceCreateIndividualConsentRecordDraft.yaml
  /service/individual/record/data-agreement-record/{dataAgreementRecordId}:
    put:
      $ref: ./paths/serviceUpdateIndividualConsentRecord.yaml
  /service/individual/record/data-agreement-record/{dataAgreementRecordId}/signature:
    post:
      $ref: ./paths/serviceCreateIndividualConsentRecordSignature.yaml
    put:
      $ref: ./paths/serviceUpdateIndividualConsentRecordSignature.yaml
  /service/individual/{individualId}:
    delete:
      $ref: ./paths/serviceIndividualDelete.yaml
    get:
      $ref: ./paths/serviceIndividualRead.yaml
    put:
      $ref: ./paths/serviceIndividualUpdate.yaml
  /service/individuals:
    get:
      $ref: ./paths/serviceIndividualList.yaml
    post:
      $ref: ./paths/serviceIndividualListFilter.yaml
  /service/policy/{policyId}:
    get:
      $ref: ./paths/servicePolicyRead.yaml
  /service/purpose/{purposeId}:
    get:
      $ref: ./paths/serviceAgreementPurposeRead.yaml
  /service/verification/data-agreement/{dataAgreementId}:
    get:
      $ref: ./paths/serviceVerificationAgreementConsentRecordRead.yaml
  /service/verification/data-agreements:
    get:
      $ref: ./paths/serviceVerificationAgreementList.yaml
    post:
      $ref: ./paths/serviceVerificationAgreementListFilter.yaml
  /service/verification/data-agreement-records:
    post:
      $ref: ./paths/serviceVerificationConsentRecordList.yaml
servers:
  - description: Development server
    url: https://api.bb-consent.dev/v2
  - description: Staging server
    url: https://staging-consent-bb-api.igrant.io/v2
  - description: Demo server
    url: https://demo-consent-bb-api.igrant.io/v2
tags:
  - description:
      "Operations for external auditing systems to query detailed data from
      the system and subscribe to notifications."
    name: audit
    x-tag-expanded: false
  - description: "Secured operations available to organization API integration"
    name: config
    x-tag-expanded: false
  - description:
      "Secured operations for individuals, data consumers and applications
      to record and verify consent"
    name: service
    x-tag-expanded: false
  - description:
      "These are used for onboard the organisation, organisation admin and
      individual users to the system.  It also deals with all authentication and authorisation
      APIs that can be configured towards external IDPs."
    name: onboard
    x-tag-expanded: false
