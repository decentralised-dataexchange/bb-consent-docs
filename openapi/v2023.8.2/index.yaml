openapi: "3.0.0"
info:
  version: "2023.8.2"
  title: "Consent Building Block APIs"
  description: >
    The Consent Building Block enables services for individuals to approve the use 
    of their personal data by defining the principles, functions, and architecture 
    of an information system. For organisations that process personal data, it 
    provides the ability to know the individual's will and legitimately process such 
    personal data. The Consent Building Block is a process-oriented GovStack Building Block 
    facilitating auditable bilateral agreements within a multi-agent environment that 
    integrates with most other Building Blocks.
  contact:
    email: support@igrant.io
    name: iGrant.io
    url: https://igrant.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: https://api.bb-consent.dev/v2
    description: Development server
  - url: https://staging-consent-bb-api.igrant.io/v2
    description: Staging server
  - url: https://demo-consent-bb-api.igrant.io/v2
    description: Demo server
tags:
  - name: audit
    x-tag-expanded: false
    description: >
      These API(s) allow managing and viewing the consents and their audit trails. The audit trails 
      of consent management are vital to individuals and organisations in case of disputes or for 
      other reasons where it is necessary to ascertain a transaction's validity.
  - name: config
    x-tag-expanded: false
    description: >
      The Organisational API(s) allow administrators to configure consent-related aspects 
      from an organisational perspective. The notification APIs using webhooks are also part 
      of this category. E.g. These are used for notifications and callbacks to organisation's 
      IT systems. The administrators configure these, and the notifications may be towards the 
      organisation's IT system or towards individual users.
  - name: service
    x-tag-expanded: false
    description: >
      These API(s) sets allow individual users to view and manage their consent-related information about their organisation.
  - name: onboard
    x-tag-expanded: false
    description: >
      These are used for onboard the organisation, organisation admin and individual users to the system. 
      It also deals with all authentication and authorisation APIs that can be configured towards external IDPs.
paths:
  # Config
  # CRUDL for global policy configuration
  /config/policy:
    $ref: "./paths/config_v2/config_policy_create.yaml"
  # Get, put and delete global policy configuration
  /config/policy/{policyId}:
    $ref: "./paths/config/getAndUpdateGlobalPolicyConfiguration.yaml"
  /config/policy/{policyId}/revisions:
    $ref: "./paths/config/getAndUpdateGlobalPolicyConfiguration.yaml"
  /config/policies:
    $ref: "./paths/config/getAndUpdateGlobalPolicyConfiguration.yaml"

  # CRUDL for data agreements
  # Get, put and delete data agreement
  /config/data-agreement/{dataAgreementId}:
    $ref: "./paths/config/getAndAddConsentAgreements.yaml"
  /config/data-agreement:
    $ref: "./paths/config/getAndAddConsentAgreements.yaml"
  /config/data-agreements:
    $ref: "./paths/config/getAndAddConsentAgreements.yaml"
  /config/data-agreement/{dataAgreementId}/revisions:
    $ref: "./paths/config/getAndAddConsentAgreements.yaml"
  /config/data-agreement/{dataAgreementId}/revision/{revisionId}:
    $ref: "./paths/config/getAndAddConsentAgreements.yaml"

  # CRUDL for data attributes
  /config/data-agreements/data-attributes:
    $ref: "./paths/config/getAndAddDataAttributes.yaml"
  /config/data-agreements/data-attribute:
    $ref: "./paths/config/getAndAddDataAttributes.yaml"
  # Put and delete data attributes
  /config/data-agreements/data-attribute/{dataAttributeId}":
    $ref: "./paths/config/getAndAddDataAttributes.yaml"

  # CRUDL for webhooks
  /config/webhooks/event-types:
    $ref: "./paths/config/createAndGetAllWebhooks.yaml"
  /config/webhooks/payload/content-types:
    $ref: "./paths/config/createAndGetAllWebhooks.yaml"
  /config/webhooks:
    $ref: "./paths/config/createAndGetAllWebhooks.yaml"
  /config/webhook/{webhookId}:
    $ref: "./paths/config/createAndGetAllWebhooks.yaml"
  /config/webhook/{webhookId}/ping:
    $ref: "./paths/config/createAndGetAllWebhooks.yaml"
  /config/webhook/{webhookId}/delivery:
    $ref: "./paths/config/createAndGetAllWebhooks.yaml"
  /config/webhook/{webhookId}/delivery/{deliveryId}:
    $ref: "./paths/config/createAndGetAllWebhooks.yaml"
  /config/webhook/{webhookId}/delivery/{deliveryId}/redeliver:
    $ref: "./paths/config/createAndGetAllWebhooks.yaml"

  # CRUDL for openid
  /config/idp/open-id:
    $ref: "./paths/config/createAndGetAllWebhooks.yaml"

  # CRUDL for apikey
  /config/admin/apikey:
    $ref: "./paths/onboard/getAndCreateAPIKey.yaml"

  # CRUDL for individuals
  /config/individuals:
    $ref: "./paths/onboard/register.yaml"
  /config/individual:
    $ref: "./paths/onboard/register.yaml"
  /config/individual/{individualId}:
    $ref: "./paths/onboard/register.yaml"

  # Service
  # Read operation for "Agreement" object
  /service/data-agreement/{dataAgreementId}:
    $ref: ""

  # Read operation for "Policy" object
  /service/policy/{policyId}:
    $ref: ""

  # List operation for "AgreementData" object
  /service/data-agreements/data-attributes:
    $ref: ""

  # Verification mechanisms
  /service/verification/data-agreements/:
    $ref: ""
  /service/verification/data-agreement/:
    $ref: ""
  /service/verification/records:
    $ref: ""

  # Recording consent (giving/withdrawing)
  /service/individual/record/agreement/{agreementId}:
    $ref: ""
  # Same as above
  /service/individual/data-agreement/{dataAgreementId}/record:
    $ref: ""

  /service/individual/record/consentrecord/{consentRecordId}:
    $ref: ""
  /service/individual/data-agreement/{dataAgreementRecordId}:
    $ref: ""

  /service/individual/record/agreement:
    $ref: ""

  /service/individual/record/data-agreement:
    $ref: ""

  /service/individual/record/data-agreement/{dataAgreementId}:
    $ref: ""

  # Audit
  /audit/consentrecords:
    $ref: "./paths/audit/list_consent_records.yaml"
  /audit/consentrecord/{consentRecordId}:
    $ref: "./paths/audit/get_consent_record.yaml"
  /audit/agreements:
    $ref: "./paths/audit/list_consent_records.yaml"
  /audit/agreement/{agreementId}:
    $ref: "./paths/audit/get_consent_record.yaml"
  /audit/admin/logs:
    $ref: "./paths/audit/list_admin_logs.yaml"

  # Onboard
  /onboard/admin/login:
    $ref: "./paths/onboard/loginAsOrganisationAdmin.yaml"
  /onboard/individual/login:
    $ref: "./paths/onboard/loginAsIndividualV11.yaml"
  /onboard/validate/email:
    $ref: "./paths/onboard/validateEmail.yaml"
  /onboard/validate/phone:
    $ref: "./paths/onboard/validatePhone.yaml"
  /onboard/verify/phone:
    $ref: "./paths/onboard/verifyPhone.yaml"
  /onboard/verify/otp:
    $ref: "./paths/onboard/verifyOTP.yaml"

  /onboard/individual/password/reset:
    $ref: "./paths/onboard/resetPassword.yaml"
  /onboard/individual/password/forgot:
    $ref: "./paths/onboard/forgotPassword.yaml"

  /onboard/individual/logout:
    $ref: "./paths/onboard/logout.yaml"

  /onboard/individual/token:
    $ref: "./paths/onboard/refreshToken.yaml"

  /onboard/organisation:
    $ref: "./paths/onboard/getAndUpdateOrganisation.yaml"

  /onboard/organisation/coverimage:
    $ref: "./paths/onboard/updateOrganisationCoverImage.yaml"
  /onboard/organisation/logoimage:
    $ref: "./paths/onboard/updateOrganisationLogoImage.yaml"

components:
  schemas:
    Log:
      $ref: "./definitions/Log.yaml"
    Pagination:
      $ref: "./definitions/Pagination.yaml"
    Error:
      $ref: "./definitions/Error.yaml"
    GetUserConsentHistory:
      $ref: "./definitions/GetUserConsentHistory.yaml"
    ConsentHistory:
      $ref: "./definitions/ConsentHistory.yaml"
    GetConsentsByConsentAgreementId:
      $ref: "./definitions/GetConsentsByConsentAgreementId.yaml"
    GetConsentsForAllConsentAgreements:
      $ref: "./definitions/GetConsentsForAllConsentAgreements.yaml"
    GetConsents:
      $ref: "./definitions/GetConsents.yaml"
    UpdateDataAgreementRecord:
      $ref: "./definitions/UpdateDataAgreementRecord.yaml"
    DataAgreementRecords:
      $ref: "./definitions/DataAgreementRecords.yaml"
    DataAgreementRecord:
      $ref: "./definitions/DataAgreementRecord.yaml"
    DataAgreementRecordRevision:
      $ref: "./definitions/DataAgreementRecordRevision.yaml"
    UpdateConsentForDataAttributeRequest:
      $ref: "./definitions/UpdateConsentForDataAttributeRequest.yaml"
    UpdateConsentForDataAttributeResponse:
      $ref: "./definitions/UpdateConsentForDataAttributeResponse.yaml"
    ListAllDataRequests:
      $ref: "./definitions/ListAllDataRequests.yaml"
    GetAllDeleteMyDataRequests:
      $ref: "./definitions/GetAllDeleteMyDataRequests.yaml"
    GetDeleteMyDataRequestStatus:
      $ref: "./definitions/GetDeleteMyDataRequestStatus.yaml"
    CancelDeleteMyDataRequest:
      $ref: "./definitions/CancelDeleteMyDataRequest.yaml"
    SendDownloadMyDataRequestError:
      $ref: "./definitions/SendDownloadMyDataRequestError.yaml"
    GetAllDownloadMyDataRequests:
      $ref: "./definitions/GetAllDownloadMyDataRequests.yaml"
    GetDownloadMyDataRequestStatus:
      $ref: "./definitions/GetDownloadMyDataRequestStatus.yaml"
    CancelDownloadMyDataRequest:
      $ref: "./definitions/CancelDownloadMyDataRequest.yaml"
    Individual:
      $ref: "./definitions/Individual.yaml"
    Organisation:
      $ref: "./definitions/Organisation.yaml"
    DataAttribute:
      $ref: "./definitions/DataAttribute.yaml"
    DataRequest:
      $ref: "./definitions/DataRequest.yaml"
    DataAgreement:
      $ref: "./definitions/DataAgreement.yaml"
    GlobalDataPolicyConfiguration:
      $ref: "./definitions/GlobalDataPolicyConfiguration.yaml"
    Signature:
      $ref: "./definitions/Signature.yaml"
  securitySchemes:
    BearerAuth:
      description: Access token passed with Bearer prefix in Authorization header
      type: http
      scheme: bearer
      bearerFormat: JWT
