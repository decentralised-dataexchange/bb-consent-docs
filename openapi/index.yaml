openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "GovStack Consent BB APIs"
  description: >
    The Consent Building Block enables services for individuals to approve the use 
    of their personal data by defining the principles, functions, and architecture 
    of an information system. For organisations that process personal data, it 
    provides the ability to know the individual's will and legitimately process such 
    personal data. The Consent Building Block is a process-oriented GovStack Building Block 
    facilitating auditable bilateral agreements within a multi-agent environment that 
    integrates with most other Building Blocks.
  contact:
    email: support@igrant.io
    name: iGrant.io
    url: https://igrant.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: https://api.bb-consent.dev/v1
    description: Development server (v1)
  - url: https://staging-consent-bb-api.igrant.io/v1
    description: Staging server (v1)
  - url: https://demo-consent-bb-api.igrant.io/v1
    description: Demo server (v1)
  - url: https://api.bb-consent.dev/v1.1
    description: Development server (v1.1)
  - url: https://staging-consent-bb-api.igrant.io/v1.1
    description: Staging server (v1.1)
  - url: https://demo-consent-bb-api.igrant.io/v1.1
    description: Demo server (v1.1)
tags:
  - name: audit
    description: Audit-related operations
  - name: config
    description: Organisation admin operations
  - name: service
    description: Individual operations
  - name: onboarding
    description: Onboarding users and organisations operations
paths:
  /organizations/{orgId}/logs:
    $ref: "./paths/audit/getOrgLogs.yaml"
  /users/{userId}/consenthistory:
    $ref: "./paths/service/getConsentHistory.yaml"
  /organizations/{orgId}/users/{userId}/consents/{consentId}/purposes/{purposeId}:
    $ref: "./paths/service/getConsentsByConsentAgreementId.yaml"
  /organizations/{orgId}/users/{userId}/consents/{consentId}:
    $ref: "./paths/service/getConsentsForAllConsentAgreements.yaml"
  /organizations/{orgId}/users/{userId}/consents:
    $ref: "./paths/service/getConsents.yaml"
  /organizations/{orgId}/users/{userId}/consents/{consentId}/purposes/{purposeId}/status:
    $ref: "./paths/service/updateConsentForConsentAgreement.yaml"
  /organizations/{orgId}/users/{userId}/consents/{consentId}/purposes/{purposeId}/attributes/{attributeId}:
    $ref: "./paths/service/updateConsentForDataAttribute.yaml"
  /user/organizations/{orgId}/data-status:
    $ref: "./paths/service/dataRequests/listAllDataRequests.yaml"
  /user/organizations/{orgId}/data-delete:
    $ref: "./paths/service/dataRequests/deleteData/sendAndGetAllDeleteMyDataRequests.yaml"
  /user/organizations/{orgId}/data-delete/status:
    $ref: "./paths/service/dataRequests/deleteData/getDeleteMyDataRequestStatus.yaml"
  /user/organizations/{orgId}/data-delete/{dataReqId}/cancel:
    $ref: "./paths/service/dataRequests/deleteData/cancelDeleteMyDataRequest.yaml"
  /user/organizations/{orgId}/data-download:
    $ref: "./paths/service/dataRequests/downloadData/sendAndGetAllDownloadMyDataRequests.yaml"
  /user/organizations/{orgId}/data-download/status:
    $ref: "./paths/service/dataRequests/downloadData/getDownloadMyDataRequestStatus.yaml"
  /user/organizations/{orgId}/data-download/{dataReqId}/cancel:
    $ref: "./paths/service/dataRequests/downloadData/cancelDownloadMyDataRequest.yaml"
components:
  schemas:
    OrganisationLog:
      $ref: "./definitions/audit/OrganisationLog.yaml"
    GetUserConsentHistory:
      $ref: "./definitions/service/GetUserConsentHistory.yaml"
    ConsentHistory:
      $ref: "./definitions/service/ConsentHistory.yaml"
    GetConsentsByConsentAgreementId:
      $ref: "./definitions/service/GetConsentsByConsentAgreementId.yaml"
    GetConsentsForAllConsentAgreements:
      $ref: "./definitions/service/GetConsentsForAllConsentAgreements.yaml"
    GetConsents:
      $ref: "./definitions/service/GetConsents.yaml"
    UpdateConsentForConsentAgreementRequest:
      $ref: "./definitions/service/UpdateConsentForConsentAgreementRequest.yaml"
    UpdateConsentForConsentAgreementResponse:
      $ref: "./definitions/service/UpdateConsentForConsentAgreementResponse.yaml"
    UpdateConsentForDataAttributeRequest:
      $ref: "./definitions/service/UpdateConsentForDataAttributeRequest.yaml"
    UpdateConsentForDataAttributeResponse:
      $ref: "./definitions/service/UpdateConsentForDataAttributeResponse.yaml"
    ListAllDataRequests:
      $ref: "./definitions/service/dataRequests/ListAllDataRequests.yaml"
    GetAllDeleteMyDataRequests:
      $ref: "./definitions/service/dataRequests/deleteData/GetAllDeleteMyDataRequests.yaml"
    GetDeleteMyDataRequestStatus:
      $ref: "./definitions/service/dataRequests/deleteData/GetDeleteMyDataRequestStatus.yaml"
    CancelDeleteMyDataRequest:
      $ref: "./definitions/service/dataRequests/deleteData/CancelDeleteMyDataRequest.yaml"
    SendDownloadMyDataRequestError:
      $ref: "./definitions/service/dataRequests/downloadData/SendDownloadMyDataRequestError.yaml"
    GetAllDownloadMyDataRequests:
      $ref: "./definitions/service/dataRequests/downloadData/GetAllDownloadMyDataRequests.yaml"
    GetDownloadMyDataRequestStatus:
      $ref: "./definitions/service/dataRequests/downloadData/GetDownloadMyDataRequestStatus.yaml"
    CancelDownloadMyDataRequest:
      $ref: "./definitions/service/dataRequests/downloadData/CancelDownloadMyDataRequest.yaml"
  securitySchemes:
    BearerAuth:
      description: Access token passed with Bearer prefix in Authorization header
      type: http
      scheme: bearer
      bearerFormat: JWT
